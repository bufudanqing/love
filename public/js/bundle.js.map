{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/AcademicExchangeActions.js","app/actions/AcademicExchangeListActions.js","app/actions/AddAcademicExchangeActions.js","app/actions/AddDocumentActions.js","app/actions/AddFlowActions.js","app/actions/AddMasterTeamActions.js","app/actions/AddNewsConsultActions.js","app/actions/AddResearchProjectActions.js","app/actions/AddResearchResultActions.js","app/actions/AddResearchTeamActions.js","app/actions/AddSpreadActions.js","app/actions/ApkActions.js","app/actions/ApkListActions.js","app/actions/Base64.js","app/actions/FeedBackActions.js","app/actions/FeedBackListActions.js","app/actions/FlowActions.js","app/actions/FlowListActions.js","app/actions/MasterTeamActions.js","app/actions/MasterTeamListActions.js","app/actions/NavbarActions.js","app/actions/NewsConsultActions.js","app/actions/NewsConsultListActions.js","app/actions/ResearchProjectActions.js","app/actions/ResearchProjectListActions.js","app/actions/ResearchResultActions.js","app/actions/ResearchResultListActions.js","app/actions/ResearchTeamActions.js","app/actions/ResearchTeamListActions.js","app/actions/SpreadListActions.js","app/alt.js","app/components/AcademicExchange.js","app/components/AcademicExchangeList.js","app/components/AddAcademicExchange.js","app/components/AddDocument.js","app/components/AddFlow.js","app/components/AddMasterTeam.js","app/components/AddNewsConsult.js","app/components/AddResearchProject.js","app/components/AddResearchResult.js","app/components/AddResearchTeam.js","app/components/AddSpread.js","app/components/Apk.js","app/components/ApkList.js","app/components/App.js","app/components/EditAcademicExchange.js","app/components/EditFlow.js","app/components/EditMasterTeam.js","app/components/EditNewsConsult.js","app/components/EditResearchProject.js","app/components/EditResearchResult.js","app/components/EditResearchTeam.js","app/components/Error.js","app/components/FeedBack.js","app/components/FeedBackList.js","app/components/Flow.js","app/components/FlowList.js","app/components/Footer.js","app/components/Home.js","app/components/Index.js","app/components/Login.js","app/components/MasterTeam.js","app/components/MasterTeamList.js","app/components/Navbar.js","app/components/NewsConsult.js","app/components/NewsConsultList.js","app/components/Page.js","app/components/ResearchProject.js","app/components/ResearchProjectList.js","app/components/ResearchResult.js","app/components/ResearchResultList.js","app/components/ResearchTeam.js","app/components/ResearchTeamList.js","app/components/SpreadList.js","app/components/Ueditor.js","app/main.js","app/routes.js","app/stores/AcademicExchangeListStore.js","app/stores/AcademicExchangeStore.js","app/stores/AddAcademicExchangeStore.js","app/stores/AddDocumentStore.js","app/stores/AddFlowStore.js","app/stores/AddMasterTeamStore.js","app/stores/AddNewsConsultStore.js","app/stores/AddResearchProjectStore.js","app/stores/AddResearchResultStore.js","app/stores/AddResearchTeamStore.js","app/stores/AddSpreadStore.js","app/stores/ApkListStore.js","app/stores/ApkStore.js","app/stores/FeedBackListStore.js","app/stores/FeedBackStore.js","app/stores/FlowListStore.js","app/stores/FlowStore.js","app/stores/MasterTeamListStore.js","app/stores/MasterTeamStore.js","app/stores/NavbarStore.js","app/stores/NewsConsultListStore.js","app/stores/NewsConsultStore.js","app/stores/ResearchProjectListStore.js","app/stores/ResearchProjectStore.js","app/stores/ResearchResultListStore.js","app/stores/ResearchResultStore.js","app/stores/ResearchTeamListStore.js","app/stores/ResearchTeamStore.js","app/stores/SpreadListStore.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\nimport Base64 from './Base64';\nclass AcademicExchangeActions {\n    constructor() {\n        this.generateActions(\n            'getAcademicExchangeSuccess',\n            'getAcademicExchangeFail'\n        );\n    }\n    getAcademicExchange(id) {\n        $.ajax({ url: '/yjzx/academic-exchange/getAcademicExchange/' + id+Base64.sign() ,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getAcademicExchangeSuccess(data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getAcademicExchangeFail(data);\n            });\n    }\n}\nexport default alt.createActions(AcademicExchangeActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass AcademicExchangeListActions {\n    constructor() {\n        this.generateActions(\n            'getAcademicExchangeListSuccess',\n            'getAcademicExchangeListFail'\n        );\n    }\n\n    getAcademicExchanges() {\n        let url = '/yjzx/academic-exchange/getAcademicExchanges'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getAcademicExchangeListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getAcademicExchangeListFail(data.data);\n            });\n    }\n    delAcademicExchange(id){\n        let url = '/yjzx/academic-exchange/delAcademicExchange/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getAcademicExchangeListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getAcademicExchangeListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(AcademicExchangeListActions);","import alt from '../alt';\n\nclass AddAcademicExchangeActions {\n    constructor() {\n        this.generateActions(\n            'addAcademicExchangeSuccess',\n            'addAcademicExchangeFail',\n            'updateTitle',\n            'updateAuthor',\n            'updateAddress',\n        );\n    }\n\n    addAcademicExchange(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/pxjd/academic-exchange/addAcademicExchange',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addAcademicExchangeSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addAcademicExchangeFail(jqXhr.responseJSON.message);\n            });\n    }\n    editAcademicExchange(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/pxjd/academic-exchange/editAcademicExchange',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addAcademicExchangeSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addAcademicExchangeFail(jqXhr.responseJSON.message);\n            });\n    }\n}\n\nexport default alt.createActions(AddAcademicExchangeActions);","import alt from '../alt';\n\nclass AddDocumentActions {\n    constructor() {\n        this.generateActions(\n            'addDocumentSuccess',\n            'addDocumentFail',\n            'updateName',\n        );\n    }\n\n    addDocument(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/document/add',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addDocumentSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addDocumentFail(data.message);\n            });\n    }\n\n}\n\nexport default alt.createActions(AddDocumentActions);","import alt from '../alt';\n\nclass AddFlowActions {\n    constructor() {\n        this.generateActions(\n            'addFlowSuccess',\n            'addFlowFail',\n            'updateName',\n            'updateAuthor',\n            'updateContent',\n            'updateUrl',\n        );\n    }\n\n    addFlow(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/flow/addFlow',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addFlowSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addFlowFail(data.message);\n            });\n    }\n    editFlow(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/flow/editFlow',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addFlowSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addFlowFail(data.message);\n            });\n\n    }\n}\n\nexport default alt.createActions(AddFlowActions);","import alt from '../alt';\n\nclass AddMasterTeamActions {\n    constructor() {\n        this.generateActions(\n            'addMasterTeamSuccess',\n            'addMasterTeamFail',\n            'updateName',\n            'updateJob',\n            'updateContent',\n            'updateAliases',\n            'updateIntroduction'\n        );\n    }\n\n    addMasterTeam(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/pxjd/master-team/addMasterTeam',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addMasterTeamSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addMasterTeamFail(data.message);\n            });\n    }\n    editMasterTeam(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/pxjd/master-team/editMasterTeam',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addMasterTeamSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addMasterTeamFail(data.message);\n            });\n\n    }\n}\n\nexport default alt.createActions(AddMasterTeamActions);","import alt from '../alt';\n\nclass AddNewsConsultActions {\n    constructor() {\n        this.generateActions(\n            'addNewsConsultSuccess',\n            'addNewsConsultFail',\n            'updateTitle',\n            'updateSubtitle',\n            'updateAuthor',\n            'updateType',\n            'updateContent',\n        );\n    }\n\n    addNewsConsult(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/syxa/news-consult/addNewsConsult',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addNewsConsultSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addNewsConsultFail(jqXhr.responseJSON.message);\n            });\n    }\n    editNewsConsult(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/syxa/news-consult/editNewsConsult',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addNewsConsultSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addNewsConsultFail(jqXhr.responseJSON.message);\n            });\n    }\n}\n\nexport default alt.createActions(AddNewsConsultActions);","import alt from '../alt';\n\nclass AddResearchProjectActions {\n    constructor() {\n        this.generateActions(\n            'addResearchProjectSuccess',\n            'addResearchProjectFail',\n            'updateTitle',\n        );\n    }\n\n    addResearchProject(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/yjzx/research-project/addResearchProject',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addResearchProjectSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addResearchProjectFail(jqXhr.responseJSON.message);\n            });\n    }\n    editMasterTeam(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/yjzx/research-project/editResearchProject',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addResearchProjectSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addResearchProjectFail(jqXhr.responseJSON.message);\n            });\n    }\n}\n\nexport default alt.createActions(AddResearchProjectActions);","import alt from '../alt';\n\nclass AddResearchResultActions {\n    constructor() {\n        this.generateActions(\n            'addResearchResultSuccess',\n            'addResearchResultFail',\n            'updateTitle',\n            'updateType'\n        );\n    }\n\n    addResearchResult(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/yjzx/research-result/addResearchResult',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addResearchResultSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addResearchResultFail(jqXhr.responseJSON.message);\n            });\n    }\n    editResearchResult(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/yjzx/research-result/editResearchResult',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addResearchResultSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addResearchResultFail(jqXhr.responseJSON.message);\n            });\n    }\n}\n\nexport default alt.createActions(AddResearchResultActions);","import alt from '../alt';\n\nclass AddResearchTeamActions {\n    constructor() {\n        this.generateActions(\n            'addResearchTeamSuccess',\n            'addResearchTeamFail',\n            'updateName',\n            'updateType',\n            'updateAcademy',\n        );\n    }\n\n    addResearchTeam(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/yjzx/research-team/addResearchTeam',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addResearchTeamSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addResearchTeamFail(data.message);\n            });\n    }\n    editResearchTeam(reqData){\n        $.ajax({\n            type: 'POST',\n            url: '/yjzx/research-team/editResearchTeam',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addResearchTeamSuccess(data.message);\n            })\n            .fail((data) => {\n                this.actions.addResearchTeamFail(data.message);\n            });\n    }\n}\n\nexport default alt.createActions(AddResearchTeamActions);","import alt from '../alt';\n\nclass AddSpreadActions {\n    constructor() {\n        this.generateActions(\n            'getSpreadSuccess',\n            'getSpreadFail',\n        );\n    }\n\n    addSpread(args) {\n        $.ajax({ url: '/spread/add',method:\"POST\",data:args})\n            .done((data) => {\n                this.actions.getSpreadSuccess(data);\n            })\n            .fail((data) => {\n                this.actions.getSpreadFail(data);\n            });\n    }\n}\n\nexport default alt.createActions(AddSpreadActions);","import alt from '../alt';\n\nclass ApkActions {\n    constructor() {\n        this.generateActions(\n            'addApkActionsSuccess',\n            'addApkActionsFail'\n        );\n    }\n\n    addApk(reqData) {\n        $.ajax({\n            type: 'POST',\n            url: '/apk/add',\n            data: reqData\n        })\n            .done((data) => {\n                this.actions.addApkActionsSuccess(data.message);\n            })\n            .fail((jqXhr) => {\n                this.actions.addApkActionsFail(jqXhr.responseJSON.message);\n            });\n    }\n}\n\nexport default alt.createActions(ApkActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ApkListActions {\n    constructor() {\n        this.generateActions(\n            'getApkListSuccess',\n            'getApkListFail'\n        );\n    }\n\n    getApks() {\n        let url = '/apk/list'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getApkListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getApkListFail(data.data);\n            });\n    }\n\n}\n\nexport default alt.createActions(ApkListActions);","var base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar base64DecodeChars = new Array(\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n    -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n    -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\n\nmodule.exports.sign=function(){\n    var newTime=new Date().getTime()+10*1000;\n    var newDate= base64encode(newTime+'');\n    var arrs=newDate.split('');\n    arrs[2]=arrs[2]+'c';\n    var arrTime=arrs.join('');\n    return '/8eb06391a10c49d34beb03a0b46b9256/'+arrTime;}\nfunction base64encode(str) {\n    var out, i, len;\n    var c1, c2, c3;\n    len = str.length;\n    i = 0;\n    out = \"\";\n    while(i < len) {\n        c1 = str.charCodeAt(i++) & 0xff;\n        if(i == len)\n        {\n            out += base64EncodeChars.charAt(c1 >> 2);\n            out += base64EncodeChars.charAt((c1 & 0x3) << 4);\n            out += \"==\";\n            break;\n        }\n        c2 = str.charCodeAt(i++);\n        if(i == len)\n        {\n            out += base64EncodeChars.charAt(c1 >> 2);\n            out += base64EncodeChars.charAt(((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4));\n            out += base64EncodeChars.charAt((c2 & 0xF) << 2);\n            out += \"=\";\n            break;\n        }\n        c3 = str.charCodeAt(i++);\n        out += base64EncodeChars.charAt(c1 >> 2);\n        out += base64EncodeChars.charAt(((c1 & 0x3)<< 4) | ((c2 & 0xF0) >> 4));\n        out += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >>6));\n        out += base64EncodeChars.charAt(c3 & 0x3F);\n    }\n    return out;\n}\nfunction base64decode(str) {\n    var c1, c2, c3, c4;\n    var i, len, out;\n    len = str.length;\n    i = 0;\n    out = \"\";\n    while(i < len) {\n        do {\n            c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff];\n        } while(i < len && c1 == -1);\n        if(c1 == -1)\n            break;\n        do {\n            c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff];\n        } while(i < len && c2 == -1);\n        if(c2 == -1)\n            break;\n        out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));\n        do {\n            c3 = str.charCodeAt(i++) & 0xff;\n            if(c3 == 61)\n                return out;\n            c3 = base64DecodeChars[c3];\n        } while(i < len && c3 == -1);\n        if(c3 == -1)\n            break;\n        out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));\n        do {\n            c4 = str.charCodeAt(i++) & 0xff;\n            if(c4 == 61)\n                return out;\n            c4 = base64DecodeChars[c4];\n        } while(i < len && c4 == -1);\n        if(c4 == -1)\n            break;\n        out += String.fromCharCode(((c3 & 0x03) << 6) | c4);\n    }\n    return out;\n}\n\nfunction utf16to8(str) {\n    var out, i, len, c;\n    out = \"\";\n    len = str.length;\n    for(i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0001) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\n        }\n    }\n    return out;\n}\nfunction utf8to16(str) {\n    var out, i, len, c;\n    var char2, char3;\n    out = \"\";\n    len = str.length;\n    i = 0;\n    while(i < len) {\n        c = str.charCodeAt(i++);\n        switch(c >> 4)\n        {\n            case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n            out += str.charAt(i-1);\n            break;\n            case 12: case 13:\n            char2 = str.charCodeAt(i++);\n            out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n            break;\n            case 14:\n                char2 = str.charCodeAt(i++);\n                char3 = str.charCodeAt(i++);\n                out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n                break;\n        }\n    }\n    return out;\n}\nmodule.exports.parseBase64=function(data){\n    if(!data){\n       return false;\n    }\n    return JSON.parse(utf8to16(base64decode(data)));\n}","import alt from '../alt';\nimport Base64 from './Base64';\nclass FeedBackActions {\n    constructor() {\n        this.generateActions(\n            'getFeedBackSuccess',\n            'getFeedBackFail'\n        );\n    }\n    getFeedBack(id) {\n        $.ajax({ url: '/yjzx/feed-back/getFeedBack/' + id+Base64.sign() ,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFeedBackSuccess(data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFeedBackFail(data);\n            });\n    }\n}\nexport default alt.createActions(FeedBackActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass FeedBackListActions {\n    constructor() {\n        this.generateActions(\n            'getFeedBackListSuccess',\n            'getFeedBackListFail'\n        );\n    }\n\n    getFeedBacks() {\n        let url = '/yjzx/feed-back/getFeedBacks'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFeedBackListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFeedBackListFail(data.data);\n            });\n    }\n    delFeedBacks(id){\n        let url = '/yjzx/feed-back/delFeedBacks/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFeedBackListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFeedBackListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(FeedBackListActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass FlowActions {\n    constructor() {\n        this.generateActions(\n            'getFlowSuccess',\n            'getFlowFail'\n        );\n    }\n    getFlow(id) {\n        $.ajax({ url: '/flow/getFlow/' + id+Base64.sign() ,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFlowSuccess(data[0]);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFlowFail(data[0]);\n            });\n    }\n}\n\nexport default alt.createActions(FlowActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass FlowListActions {\n    constructor() {\n        this.generateActions(\n            'getFlowListSuccess',\n            'getFlowListFail'\n        );\n    }\n\n    getFlows() {\n        let url = '/flow/getFlows'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFlowListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFlowListFail(data.data);\n            });\n    }\n    delFlow(id,type){\n        let url = '/flow/delFlow/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFlowListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getFlowListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(FlowListActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass MasterTeamActions {\n    constructor() {\n        this.generateActions(\n            'getMasterTeamSuccess',\n            'getMasterTeamFail'\n        );\n    }\n    getMasterTeam(id) {\n        $.ajax({ url: '/pxjd/master-team/getMasterTeam/' + id+Base64.sign() ,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getMasterTeamSuccess(data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getMasterTeamFail(data);\n            });\n    }\n}\n\nexport default alt.createActions(MasterTeamActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass MasterTeamListActions {\n    constructor() {\n        this.generateActions(\n            'getMasterTeamListSuccess',\n            'getMasterTeamListFail'\n        );\n    }\n\n    getMasterTeams() {\n        let url = '/pxjd/master-team/getMasterTeams'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getMasterTeamListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getMasterTeamListFail(data.data);\n            });\n    }\n    delMasterTeam(id,type){\n        let url = '/pxjd/master-team/delMasterTeam/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getMasterTeamListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getMasterTeamListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(MasterTeamListActions);","import alt from '../alt';\nimport {assign} from 'underscore';\n\nclass NavbarActions {\n  constructor() {\n    this.generateActions(\n      'updateOnlineUsers',\n      'updateAjaxAnimation',\n      'updateSearchQuery',\n    );\n  }\n}\n\nexport default alt.createActions(NavbarActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass NewsConsultActions {\n    constructor() {\n        this.generateActions(\n            'getNewsConsultSuccess',\n            'getNewsConsultFail'\n        );\n    }\n    getNewsConsult(id) {\n        $.ajax({ url: '/syxa/news-consult/getNewsConsult/' + id+Base64.sign(),method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getNewsConsultSuccess(data);\n            })\n            .fail((jqXhr) => {\n                this.actions.getNewsConsultFail(jqXhr);\n            });\n    }\n}\n\nexport default alt.createActions(NewsConsultActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass NewsConsultListActions {\n    constructor() {\n        this.generateActions(\n            'getNewsConssultSuccess',\n            'getNewsConsultFail'\n        );\n    }\n\n    getNewsConsults() {\n        var start=0,size=10;\n        let url = '/syxa/news-consult/getNewsConsults/'+start+'/'+size+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                data.data.forEach(function(item,insex,arr){\n                    item.type==\"1\"?item.type=\"新闻咨询\":item.type=\"公司动态\";\n                    arr[insex]=item;\n                });\n                this.actions.getNewsConssultSuccess(data);\n            })\n            .fail((data) => {\n                this.actions.getNewsConssultSuccess(data);\n            });\n    }\n    delNewsConsult(id){\n        let url = '/syxa/news-consult/delNewsConsult/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                data.data.forEach(function(item,insex,arr){\n                    item.type==\"1\"?item.type=\"新闻咨询\":item.type=\"公司动态\";\n                    arr[insex]=item;\n                });\n                this.actions.getNewsConssultSuccess(data);\n            })\n            .fail((data) => {\n                this.actions.getNewsConssultSuccess(data);\n            });\n    }\n\n\n\n\n\n\n\n\n\n\n}\n\nexport default alt.createActions(NewsConsultListActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ResearchProjectActions {\n    constructor() {\n        this.generateActions(\n            'getResearchProjectSuccess',\n            'getResearchProjectFail'\n        );\n    }\n    getResearchProject(id) {\n        $.ajax({ url: '/yjzx/research-project/getResearchProject/' + id+Base64.sign(),method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchProjectSuccess(data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchProjectFail(data);\n            });\n    }\n\n\n\n}\n\nexport default alt.createActions(ResearchProjectActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ResearchProjectListActions {\n    constructor() {\n        this.generateActions(\n            'getResearchProjectListSuccess',\n            'getResearchProjectListFail'\n        );\n    }\n\n    getResearchProjects(type) {\n        let url = '/yjzx/research-project/getResearchProjects'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchProjectListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchProjectListFail(data.data);\n            });\n    }\n    delResearchProject(id){\n        let url = '/yjzx/research-project/delResearchProject/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchProjectListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchProjectListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(ResearchProjectListActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ResearchResultActions {\n    constructor() {\n        this.generateActions(\n            'getResearchResultSuccess',\n            'getResearchResultFail'\n        );\n    }\n    getResearchResult(id) {\n        $.ajax({ url: '/yjzx/research-result/getResearchResult/' + id+Base64.sign() ,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchResultSuccess(data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchResultFail(data);\n            });\n    }\n}\n\nexport default alt.createActions(ResearchResultActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ResearchResultListActions {\n    constructor() {\n        this.generateActions(\n            'getResearchResultListSuccess',\n            'getResearchResultListFail'\n        );\n    }\n\n    getResearchResults(type) {\n        let url = '/yjzx/research-result/getResearchResults/'+type+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n            data.data.forEach(function(item,index,arr){\n                item.type==\"1\"?item.type=\"专利\":item.type==\"2\"?item.type=\"软著\":item.type==\"3\"?item.type=\"获奖\":item.type==\"4\"?item.type=\"项目\":item.type=\"论文\";\n                arr[index]=item;\n            });\n                this.actions.getResearchResultListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchResultListFail(data.data);\n            });\n    }\n    delResearchResult(id,type){\n        let url = '/yjzx/research-result/delResearchResult/'+id+'/'+type+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchResultListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchResultListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(ResearchResultListActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ResearchTeamActions {\n    constructor() {\n        this.generateActions(\n            'getResearchTeamSuccess',\n            'getResearchTeamFail'\n        );\n    }\n    getResearchTeam(id) {\n        $.ajax({ url: '/pxjd/research-team/getResearchTeam/' + id+Base64.sign() ,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchTeamSuccess(data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchTeamFail(data);\n            });\n    }\n}\n\nexport default alt.createActions(ResearchTeamActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass ResearchTeamListActions {\n    constructor() {\n        this.generateActions(\n            'getResearchTeamListSuccess',\n            'getResearchTeamListFail'\n        );\n    }\n\n    getResearchTeams(type) {\n        let url = '/yjzx/research-team/getResearchTeams'+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                data.data.forEach(function(item,index,arr){\n                    item.type==\"1\"?item.type=\"教授\":item.type==\"2\"?item.type=\"专家\":item.type=\"技术\";\n                    arr[index]=item;\n                });\n                this.actions.getResearchTeamListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchTeamListFail(data.data);\n            });\n    }\n    delResearchTeam(id){\n        let url = '/yjzx/research-team/delResearchTeam/'+id+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchTeamListSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getResearchTeamListFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(ResearchTeamListActions);","import alt from '../alt';\nimport Base64 from './Base64';\nclass SpreadListActions {\n    constructor() {\n        this.generateActions(\n            'getSpreadsSuccess',\n            'getSpreadsFail'\n        );\n    }\n    getSpreads(type) {\n        let url = '/spread/list/'+type+Base64.sign();\n        $.ajax({ url: url,method:\"GET\"})\n            .done((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getSpreadsSuccess(data.data);\n            })\n            .fail((data) => {\n                var data=Base64.parseBase64(data);\n                this.actions.getSpreadsFail(data.data);\n            });\n    }\n}\n\nexport default alt.createActions(SpreadListActions);","import Alt from 'alt';\n\nexport default new Alt();","import React from 'react';\nimport AcademicExchangeStore from '../stores/AcademicExchangeStore';\nimport AcademicExchangeActions from '../actions/AcademicExchangeActions'\n\nclass AcademicExchange extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AcademicExchangeStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        AcademicExchangeActions.getAcademicExchange(this.props.params.id);\n    }\n    componentDidMount() {\n        AcademicExchangeStore.listen(this.onChange);\n        AcademicExchangeActions.getAcademicExchange(this.props.params.id);\n    }\n\n    componentWillUnmount() {\n        AcademicExchangeStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            AcademicExchangeActions.getAcademicExchange(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.content);\n    }\n\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看名学术交流</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.url}/>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>标题</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>作者</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.author}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>地址</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.address}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default AcademicExchange;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport AcademicExchangeListStore from '../stores/AcademicExchangeListStore';\nimport AcademicExchangeListActions from '../actions/AcademicExchangeListActions';\n\nclass AcademicExchangeList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AcademicExchangeListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AcademicExchangeListStore.listen(this.onChange);\n        AcademicExchangeListActions.getAcademicExchanges();\n    }\n\n    componentWillUnmount() {\n        AcademicExchangeListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        AcademicExchangeListActions.delAcademicExchange(event.target.name);\n    }\n    render() {\n        let AcademicExchangeList = this.state.academicExchanges.map((scademicExchange, index) => {\n            return (\n                <div key={scademicExchange.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='pull-left thumb-lg'>\n                            <img className='media-object'  src={scademicExchange.url} />\n                        </div>\n                        <div className='media-body'>\n                            <h4 className='media-heading'>\n                                <small>标题 <strong>\n                                    <Link to={'/yjzx/academic-exchange/getAcademicExchange/' + scademicExchange.id}>{scademicExchange.title}</Link>\n                                </strong></small>\n\n                            </h4>\n                            <small>作者 <strong>{scademicExchange.author}</strong></small>\n                            <br />\n                            <small>地址 <strong>{scademicExchange.address}</strong></small>\n                            <br />\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/syxa/academic-exchange/editAcademicExchange/' + scademicExchange.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={scademicExchange.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {AcademicExchangeList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AcademicExchangeList;","import React from 'react';\nimport AddAcademicExchangeStore from '../stores/AddAcademicExchangeStore';\nimport AddAcademicExchangeActions from '../actions/AddAcademicExchangeActions';\nimport Ueditor from './Ueditor';\nclass AddAcademicExchange extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddAcademicExchangeStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AddAcademicExchangeStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        AddAcademicExchangeStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            title:this.state.title,\n            author:this.state.author,\n            address:this.state.address,\n            url:$(\"#imgUrl\").attr(\"src\"),\n            content:UE.getEditor('content').getContent()\n        }\n        AddAcademicExchangeActions.addAcademicExchange(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建学术交流</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/academic_exchange/\" />\n\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n\n\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                               onChange={AddAcademicExchangeActions.updateTitle} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.author}\n                                               onChange={AddAcademicExchangeActions.updateAuthor} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>地址</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.address}\n                                               onChange={AddAcademicExchangeActions.updateAddress} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor  id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddAcademicExchange;","import React from 'react';\nimport AddDocumentStore from '../stores/AddDocumentStore';\nimport AddDocumentActions from '../actions/AddDocumentActions';\nimport Ueditor from './Ueditor';\nclass AddDocument extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddDocumentStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentDidMount() {\n        AddDocumentStore.listen(this.onChange);\n    }\n    componentWillUnmount() {\n        AddDocumentStore.unlisten(this.onChange);\n    }\n    onChange() {\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            name:$(\"#name\").val(),\n            size:$(\"#size\").val(),\n            url:$(\"#fileUrl\").val()\n    }\n        AddDocumentActions.addDocument(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".doc\" || objType ===\".docx\" || objType ===\".pdf\" || objType ===\".zip\" || objType ===\".png\" || objType ===\".jpg\" || objType ===\".xls\" || objType ===\".xlsx\" || objType ===\".exe\")){\n                alert(\"请选择合法文档\");\n                return false;\n            }\n            $.ajax({\n                url: '/apkUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                $(\"#fileUrl\").val(res.src);\n                $(\"#size\").val(res.size);\n                $(\"#imgUrl\").attr(\"src\",res.src)\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>添加文档</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>文档</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/document/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"fileUrl\" defaultValue=''/>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>名字</label>\n                                        <input type='text' className='form-control' id='name' defaultValue=''/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>大小</label>\n                                        <input type='text' className='form-control' id=\"size\"  defaultValue='' />\n                                    </div>\n                                    {/*<div className={'form-group '}>*/}\n                                        {/*<label className='control-label'>内容</label>*/}\n                                        {/*<Ueditor  id=\"content\" height=\"400\" />*/}\n                                    {/*</div>*/}\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddDocument;","import React from 'react';\nimport AddFlowStore from '../stores/AddFlowStore';\nimport AddFlowActions from '../actions/AddFlowActions';\nimport Ueditor from './Ueditor';\nclass AddFlow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddFlowStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentDidMount() {\n        AddFlowStore.listen(this.onChange);\n    }\n    componentWillUnmount() {\n        AddFlowStore.unlisten(this.onChange);\n    }\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            name:this.state.name,\n            author:this.state.author,\n            url:$(\"#imgUrl\").attr(\"src\"),\n            content:UE.getEditor('content').getContent()\n        }\n        AddFlowActions.addFlow(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建流程</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>流程图</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/flow/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>名字</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                               onChange={AddFlowActions.updateName} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.author}\n                                               onChange={AddFlowActions.updateAuthor} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor  id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddFlow;","import React from 'react';\nimport AddMasterTeamStore from '../stores/AddMasterTeamStore';\nimport AddMasterTeamActions from '../actions/AddMasterTeamActions';\nimport Ueditor from './Ueditor';\nclass AddResearchTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddMasterTeamStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AddMasterTeamStore.listen(this.onChange);\n\n    }\n\n    componentWillUnmount() {\n        AddMasterTeamStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            name:this.state.name,\n            url:$(\"#imgUrl\").attr(\"src\"),\n            job:this.state.job,\n            aliases:this.state.aliases,\n            introduction:this.state.introduction,\n            content:UE.getEditor('content').getContent()\n        }\n        AddMasterTeamActions.addMasterTeam(reqData);\n    }\n    imgAjaxUpload(event){\n       var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建名师团队</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>头像</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/pxjd/master_team/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>姓名</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                               onChange={AddMasterTeamActions.updateName} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>别名</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.aliases}\n                                               onChange={AddMasterTeamActions.updateAliases} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>简介</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.introduction}\n                                               onChange={AddMasterTeamActions.updateIntroduction} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>职称</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.job}\n                                               onChange={AddMasterTeamActions.updateJob} autoFocus/>\n                                    </div>\n\n\n                                    <div className={'form-group '}>\n                                            <label className='control-label'>内容</label>\n                                            <Ueditor  id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddResearchTeam;","//此处是创建一个添加新闻公告/公司动态的组件\nimport React from 'react';\nimport AddNewsConsultStore from '../stores/AddNewsConsultStore';\nimport AddNewsConsultActions from '../actions/AddNewsConsultActions';\nimport Ueditor from './Ueditor';\nclass AddNewsConsult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddNewsConsultStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AddNewsConsultStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        AddNewsConsultStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            title:this.state.title,\n            author:this.state.author,\n            subtitle:this.state.subtitle,\n            type:this.state.type,\n            content:'<p style=\"text-align: center;\"><span>'+this.state.title+'</span></p></br></br>'+UE.getEditor('content').getContent(),\n            top_img:$(\"#imgUrl\").attr(\"src\")\n        }\n        AddNewsConsultActions.addNewsConsult(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建新闻公告/公司动态</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/syxa/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                               onChange={AddNewsConsultActions.updateTitle} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.author}\n                                               onChange={AddNewsConsultActions.updateAuthor} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>子标题</label>\n                                        <textarea type='text' className='form-control' ref='nameTextField' value={this.state.subtitle}\n                                               onChange={AddNewsConsultActions.updateSubtitle} autoFocus></textarea>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>类型</label>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='gender' id='female' value='1' checked={this.state.type === '1'}\n                                                   onChange={AddNewsConsultActions.updateType}/>\n                                            <label htmlFor='female'>公司动态</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='gender' id='male' value='2' checked={this.state.type === '2'}\n                                                   onChange={AddNewsConsultActions.updateType}/>\n                                            <label htmlFor='male'>新闻资讯</label>\n                                        </div>\n                                        <div className={'form-group '}>\n                                            <label className='control-label'>内容</label>\n                                            <Ueditor  id=\"content\" height=\"400\" />\n                                        </div>\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddNewsConsult;","//此处是创建一个添加新闻公告/公司动态的组件\nimport React from 'react';\nimport AddResearchProjectStore from '../stores/AddResearchProjectStore';\nimport AddResearchProjectActions from '../actions/AddResearchProjectActions';\nimport Ueditor from './Ueditor';\nclass AddResearchProject extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddResearchProjectStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AddResearchProjectStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        AddResearchProjectStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            title:this.state.title,\n            url:$(\"#imgUrl\").attr(\"src\"),\n            summary:UE.getEditor('content').getContent()\n        }\n        AddResearchProjectActions.addResearchProject(reqData);\n    }\n\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建研究项目</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/research_project/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>项目名称</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                               onChange={AddResearchProjectActions.updateTitle} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>描述</label>\n                                        <Ueditor  id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddResearchProject;","//此处是创建一个添加新闻公告/公司动态的组件\nimport React from 'react';\nimport AddResearchResultStore from '../stores/AddResearchResultStore';\nimport AddResearchResultActions from '../actions/AddResearchResultActions';\nimport Ueditor from './Ueditor';\nclass AddResearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddResearchResultStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AddResearchResultStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        AddResearchResultStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            title:this.state.title,\n            type:this.state.type,\n            url:$(\"#imgUrl\").attr(\"src\"),\n            summary:UE.getEditor('content').getContent()\n        }\n        AddResearchResultActions.addResearchResult(reqData);\n    }\n\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建研究成果</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/research_result/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                               onChange={AddResearchResultActions.updateTitle} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>类型</label>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='zl' value=\"1\" checked={this.state.type === '1'}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='zl'>专利</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='rz' value='2' checked={this.state.type === '2'}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='rz'>软著</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='hj' value='3' checked={this.state.type === '3'}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='hj'>获奖</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='xm' value='4' checked={this.state.type === '4'}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='xm'>项目</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='lw' value='5' checked={this.state.type === '5'}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='lw'>论文</label>\n                                        </div>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>描述</label>\n                                        <Ueditor  id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddResearchResult;","//此处是创建一个添加新闻公告/公司动态的组件\nimport React from 'react';\nimport AddResearchTeamStore from '../stores/AddResearchTeamStore';\nimport AddResearchTeamActions from '../actions/AddResearchTeamActions';\nimport Ueditor from './Ueditor';\nclass AddResearchTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AddResearchTeamStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        AddResearchTeamStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        AddResearchTeamStore.unlisten(this.onChange);\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            name:this.state.name,\n            type:this.state.type,\n            url:$(\"#imgUrl\").attr(\"src\"),\n            academy:this.state.academy,\n            summary:UE.getEditor('content').getContent()\n        }\n        AddResearchTeamActions.addResearchTeam(reqData);\n    }\n\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建研究团队</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/research_team/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src=\"/img/default.gif\"  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>团队名称</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                               onChange={AddResearchTeamActions.updateName} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='js' value='1' checked={this.state.type === '1'}\n                                                   onChange={AddResearchTeamActions.updateType}/>\n                                            <label htmlFor='js'>教授</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='zj' value='2' checked={this.state.type === '2'}\n                                                   onChange={AddResearchTeamActions.updateType}/>\n                                            <label htmlFor='zj'>专家</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='js2' value='3' checked={this.state.type === '3'}\n                                                   onChange={AddResearchTeamActions.updateType}/>\n                                            <label htmlFor='js2'>技术</label>\n                                        </div>\n\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>简介</label>\n                                        <input type='text' className='form-control' ref='nameTextField' value={this.state.academy}\n                                               onChange={AddResearchTeamActions.updateAcademy} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>描述</label>\n                                        <Ueditor  id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit' className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddResearchTeam;","import React from 'react';\nimport AddSpreadStore from '../stores/AddSpreadStore';\nimport AddSpreadActions from '../actions/AddSpreadActions';\nclass AddSpread extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state=AddSpreadStore.getState();\n    }\n    componentDidMount() {\n        var spread=this;\n        $( \"input[type='radio']\" ).on( \"click\", function(){\n            switch ($(this).val()){\n                case \"1\":\n                    spread.setState({baseUrl:\"public/img/spread/syxa/\",type:1});\n                    break;\n                case \"2\":\n                    spread.setState({baseUrl:\"public/img/spread/pxjd/\",type:2});\n                    break;\n                case \"3\":\n                    spread.setState({baseUrl:\"public/img/spread/yjzx/\",type:3});\n                    break;\n                default:\n                    break\n            }\n        } );\n    }\n\n\n    imgAjaxUpload(event){\n        if(this.state.baseUrl.length<1){\n            alert(\"请先选择上传图片的类型!\");\n           return false;\n        }\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n            fileEle.on('change',function(){\n                var objFile=  $(this).val();\n                var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n                if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                    alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                    return false;\n                }\n                $.ajax({\n                    url: '/fileUpload/add',\n                    type: 'POST',\n                    cache: false,\n                    data: new FormData(formDom[0]),\n                    processData: false,\n                    contentType: false\n                }).done(function(res) {\n                    imgEle.attr('src',res.src);\n                }).fail(function(res) {});\n            });\n    }\n    subBtn(){\n        AddSpreadActions.addSpread({type:this.state.type,url:$(\"#imgUrl\").attr(\"src\")});\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>创建展板</div>\n                            <span className='help-block'>{this.state.helpBlock}</span>\n                            <div className='panel-body'>\n                                <div className='row '>\n                                <div className='col-sm-6'>\n                                <div className={'form-group '}>\n                                <label className='control-label'>图片:</label>\n                                <form>\n                                <input type=\"hidden\" name=\"baseUrl\" value={this.state.baseUrl}/>\n                                <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"300\" width=\"300\"  src=\"/img/default.gif\"  />\n                                <input name=\"img\" type=\"file\" style={style} />\n                                </form>\n                                </div>\n                                </div>\n                                <div className='col-sm-6'>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>类型:</label><br/>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' value='1' id=\"syxa\" />\n                                            <label htmlFor='syxa'>数元信安</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio'  name='type' value='2' id=\"pxjd\"/>\n                                            <label htmlFor='pxjd'>培训基地</label>\n                                        </div>\n                                        <div className='radio  radio-inline'>\n                                            <input type='radio'  name='type' value='3'  id=\"yjzx\" />\n                                            <label htmlFor='yjzx'>研究中心</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                </div>\n                                <button type='submit'  className='btn btn-primary subBtn' onClick={this.subBtn.bind(this)} >提交</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default AddSpread;","import React from 'react';\nimport ApkStore from '../stores/ApkStore';\nimport ApkActions from '../actions/ApkActions';\nclass Apk extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state=ApkStore.getState();\n    }\n    componentDidMount() {\n\n    }\n\n\n    imgAjaxUpload(event){\n       event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".apk\")){\n                alert(\"请上传apk文件\");\n                return false;\n            }\n            if(objType===\".apk\"){\n                $.ajax({\n                    url: '/apkUpload/add',\n                    type: 'POST',\n                    cache: false,\n                    data: new FormData(formDom[0]),\n                    processData: false,\n                    contentType: false\n                }).done(function(res) {\n                    imgEle.attr('src',res.src);\n                    $(\"#size\").val(res.size);\n                    $(\"#download\").val(res.url);\n\n                }).fail(function(res) {});\n            }\n\n        });\n    }\n    subBtn(){\n        var reqData={\n           name:$(\"#name\").val(),\n            version:$(\"#version\").val(),\n            url:$(\"#apkUrl\").attr(\"src\"),\n            down_url:$(\"#download\").val(),\n            size:$(\"#size\").val(),\n        }\n        ApkActions.addApk(reqData);\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>添加Apk</div>\n                            <div className='panel-body'>\n\n                                <div className='row '>\n                                    <div className='col-sm-6'>\n                                        <div className={'form-group '}>\n                                            <input type=\"hidden\" id=\"download\"/>\n                                            <label className='control-label'>名称</label>\n                                            <input type='text' className='form-control' id=\"name\"\n                                                   />\n                                        </div>\n                                        <div className={'form-group '}>\n                                            <label className='control-label'>版本</label>\n                                            <input type='text' className='form-control' id=\"version\"\n                                                    />\n                                        </div>\n                                        <div className={'form-group '}>\n                                            <input type=\"hidden\" id=\"download\"/>\n                                            <label className='control-label'>大小</label>\n                                            <input type='text' className='form-control' id=\"size\"\n                                            />\n                                        </div>\n                                        <div className={'form-group '}>\n                                            <label className='control-label'>Apk:</label>\n                                            <form>\n                                                <input type=\"hidden\" name=\"imgurl\" id=\"imgurl\" value=\"\"/>\n                                                <input type=\"hidden\" name=\"baseUrl\" value=\"public/apk/\"/>\n                                                <img onClick={this.imgAjaxUpload.bind(this)} id=\"apkUrl\" height=\"150\" width=\"150\"  src=\"/img/default.gif\"  />\n                                                <input name=\"img\" type=\"file\" style={style} />\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button type='submit'  className='btn btn-primary subBtn' onClick={this.subBtn.bind(this)} >提交</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Apk;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport ApkListStore from '../stores/ApkListStore';\nimport ApkListActions from '../actions/ApkListActions';\nclass ApkList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ApkListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentDidMount() {\n        ApkListStore.listen(this.onChange);\n        ApkListActions.getApks();\n    }\n    componentWillUnmount() {\n        ApkListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    render() {\n        let ListApk = this.state.apks.map((apk, index) => {\n            return (\n                <div key={apk.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='media-body'>\n                            <div className='pull-left thumb-lg'>\n                                <img className='media-object'  src={apk.url} />\n                            </div>\n                            <h4 className='media-heading'>\n                                <small>名字 <strong>\n                                    <Link to={'/#' + apk.id}>{apk.name}</Link>\n                                </strong></small>\n                            </h4>\n                            <br />\n                            <small>版本 <strong>{apk.version}</strong></small>\n                            <br />\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {ListApk}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ApkList;","import React from 'react';\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport AcademicExchangeStore from '../stores/AcademicExchangeStore';\nimport AcademicExchangeActions from '../actions/AcademicExchangeActions';\nimport AddAcademicExchangeActions from '../actions/AddAcademicExchangeActions';\nimport Ueditor from './Ueditor';\nclass EditAcademicExchange extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = AcademicExchangeStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        AcademicExchangeActions.getAcademicExchange(this.props.params.id);\n\n    }\n    componentDidMount() {\n        AcademicExchangeStore.unlisten(this.onChange);\n        AcademicExchangeActions.getAcademicExchange(this.props.params.id);\n\n    }\n\n    componentWillUnmount() {\n        AcademicExchangeStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            AcademicExchangeActions.getAcademicExchange(this.props.params.id);\n        }\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            title:$(\"#title\").val(),\n            author:$(\"#author\").val(),\n            address:$(\"#address\").val(),\n            content:UE.getEditor('content').getContent(),\n            url:$(\"#imgUrl\").attr(\"src\")\n        }\n        AddAcademicExchangeActions.editAcademicExchange(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑学术交流</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/academic_exchange/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' id=\"title\" ref='nameTextField' defaultValue={this.state.title}\n                                               onChange={AcademicExchangeActions.updateTitle} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' id=\"author\" ref='nameTextField' defaultValue={this.state.author}\n                                               onChange={AcademicExchangeActions.updateAuthor} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>地址</label>\n                                        <input type='text' className='form-control' id=\"address\" ref='nameTextField' defaultValue={this.state.address}\n                                               onChange={AcademicExchangeActions.updateAddress} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor name={this.state.content} id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditAcademicExchange;","import React from 'react';\nimport FlowStore from '../stores/FlowStore';\nimport FlowActions from '../actions/FlowActions';\nimport AddFlowActions from '../actions/AddFlowActions';\nimport Ueditor from './Ueditor';\nclass EditMasterTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = FlowStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        FlowActions.getFlow(this.props.params.id);\n\n    }\n    componentDidMount() {\n        FlowStore.unlisten(this.onChange);\n\n    }\n\n    componentWillUnmount() {\n        FlowStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            name:$(\"#name\").val(),\n            author:$(\"#author\").val(),\n            url:$(\"#imgUrl\").attr(\"src\"),\n            content:UE.getEditor('content').getContent()\n        }\n        AddFlowActions.editFlow(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑流程</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/flow/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>名称</label>\n                                        <input type='text' className='form-control' id=\"name\" ref='nameTextField' defaultValue={this.state.name}\n                                               onChange={AddFlowActions.updateName} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' id=\"author\" ref='nameTextField' defaultValue={this.state.author}\n                                               onChange={AddFlowActions.updateAuthor} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor name={this.state.content} id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditMasterTeam;","import React from 'react';\nimport MasterTeamStore from '../stores/MasterTeamStore';\nimport MasterTeamActions from '../actions/MasterTeamActions';\nimport AddMasterTeamActions from '../actions/AddMasterTeamActions';\nimport Ueditor from './Ueditor';\nclass EditMasterTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = MasterTeamStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        MasterTeamActions.getMasterTeam(this.props.params.id);\n\n    }\n    componentDidMount() {\n        MasterTeamStore.unlisten(this.onChange);\n        MasterTeamActions.getMasterTeam(this.props.params.id);\n\n    }\n\n    componentWillUnmount() {\n        MasterTeamStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            MasterTeamActions.getMasterTeam(this.props.params.id);\n        }\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            name:$(\"#name\").val(),\n            job:$(\"#job\").val(),\n            introduction:$(\"#introduction\").val(),\n            aliases:$(\"#aliases\").val(),\n            url:$(\"#imgUrl\").attr(\"src\"),\n            content:UE.getEditor('content').getContent()\n        }\n        AddMasterTeamActions.editMasterTeam(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑名师团队</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/pxjd/master_team/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>名称</label>\n                                        <input type='text' className='form-control' id=\"name\" ref='nameTextField' defaultValue={this.state.name}\n                                               onChange={AddMasterTeamActions.updateName} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>别名</label>\n                                        <input type='text' className='form-control' id=\"aliases\" ref='nameTextField' defaultValue={this.state.aliases}\n                                               onChange={AddMasterTeamActions.updateAliases} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>简介</label>\n                                        <input type='text' className='form-control' id=\"introduction\" ref='nameTextField' defaultValue={this.state.introduction}\n                                               onChange={AddMasterTeamActions.updateIntroduction} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>职称</label>\n                                        <input type='text' className='form-control' id=\"job\" ref='nameTextField' defaultValue={this.state.job}\n                                               onChange={AddMasterTeamActions.updateJob} autoFocus/>\n                                    </div>\n\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor name={this.state.content} id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditMasterTeam;","import React from 'react';\nimport NewsConsultStore from '../stores/NewsConsultStore';\nimport NewsConsultActions from '../actions/NewsConsultActions';\nimport AddNewsConsultActions from '../actions/AddNewsConsultActions';\nimport Ueditor from './Ueditor';\nclass EditNewsConsult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = NewsConsultStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        NewsConsultActions.getNewsConsult(this.props.params.id);\n\n    }\n    componentDidMount() {\n        NewsConsultStore.unlisten(this.onChange);\n        NewsConsultActions.getNewsConsult(this.props.params.id);\n\n    }\n\n    componentWillUnmount() {\n        NewsConsultStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            NewsConsultActions.getNewsConsult(this.props.params.id);\n        }\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            title:$(\"#title\").val(),\n            author:$(\"#author\").val(),\n            subtitle:$(\"#subtitle\").val(),\n            type:$('input:radio[name=\"type\"]:checked').val(),\n            top_img:$(\"#imgUrl\").attr(\"src\"),\n            content:UE.getEditor('content').getContent()\n        }\n        AddNewsConsultActions.editNewsConsult(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var top_img=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑新闻资讯/公司动态</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/syxa/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.top_img || top_img}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' id=\"title\" ref='nameTextField' defaultValue={this.state.title}\n                                               onChange={this.updateTitle} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' id=\"author\" ref='nameTextField' defaultValue={this.state.author}\n                                               onChange={AddNewsConsultActions.updateAuthor} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>子标题</label>\n                                        <input type='text' className='form-control' id=\"subtitle\" ref='nameTextField' defaultValue={this.state.subtitle}\n                                               onChange={AddNewsConsultActions.updateSubtitle} autoFocus/>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>类型</label>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='female'  value='1' defaultChecked={this.state.type === 1}\n                                                  />\n                                            <label htmlFor='female'>新闻咨询</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='male' value='2' defaultChecked={this.state.type === 2}\n                                                  />\n                                            <label htmlFor='male'>公司动态</label>\n                                        </div>\n                                        <div className={'form-group '}>\n                                            <label className='control-label'>内容</label>\n                                            <Ueditor name={this.state.content} id=\"content\" height=\"400\" />\n                                        </div>\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditNewsConsult;","import React from 'react';\nimport ResearchProjectStore from '../stores/ResearchProjectStore';\nimport ResearchProjectActions from '../actions/ResearchProjectActions';\nimport AddResearchProjectActions from '../actions/AddResearchProjectActions';\nimport Ueditor from './Ueditor';\nclass EditResearchProject extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchProjectStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        ResearchProjectActions.getResearchProject(this.props.params.id);\n\n    }\n    componentDidMount() {\n        ResearchProjectStore.unlisten(this.onChange);\n        ResearchProjectActions.getResearchProject(this.props.params.id);\n\n    }\n\n    componentWillUnmount() {\n        ResearchProjectStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            ResearchProjectActions.getResearchProject(this.props.params.id);\n        }\n    }\n\n    onChange(state) {\n        this.setState(state);\n\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            title:$(\"#title\").val(),\n            url:$(\"#imgUrl\").attr(\"src\"),\n            summary:UE.getEditor('content').getContent()\n        }\n        AddResearchProjectActions.editMasterTeam(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑研究工程</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/research_project/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' id=\"title\" ref='nameTextField' defaultValue={this.state.title}\n                                               onChange={AddResearchProjectActions.updateTitle} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor name={this.state.summary} id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditResearchProject;","import React from 'react';\nimport ResearchResultStore from '../stores/ResearchResultStore';\nimport ResearchResultActions from '../actions/ResearchResultActions';\nimport AddResearchResultActions from '../actions/AddResearchResultActions';\nimport Ueditor from './Ueditor';\nclass EditResearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchResultStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        ResearchResultActions.getResearchResult(this.props.params.id);\n\n    }\n    componentDidMount() {\n        ResearchResultStore.unlisten(this.onChange);\n        ResearchResultActions.getResearchResult(this.props.params.id);\n\n    }\n\n    componentWillUnmount() {\n        ResearchResultStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            ResearchResultActions.getResearchResult(this.props.params.id);\n        }\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            title:$(\"#title\").val(),\n            type:$('input:radio[name=\"type\"]:checked').val(),\n            url:$(\"#imgUrl\").attr(\"src\"),\n            summary:UE.getEditor('content').getContent()\n        }\n        AddResearchResultActions.editResearchResult(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑研究成果</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/research_result/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n                                    <span className='help-block'>{this.state.helpBlock}</span>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' id=\"title\" ref='nameTextField' defaultValue={this.state.title}\n                                               onChange={AddResearchResultActions.updateTitle} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>类型</label>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='zl' value='1' defaultChecked={this.state.type ==\"1\"}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='zl'>专利</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='rz' value='2' defaultChecked={this.state.type ==\"2\"}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='rz'>软著</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='hj' value='3' defaultChecked={this.state.type ==\"3\"}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='hj'>获奖</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='xm' value='4' defaultChecked={this.state.type ==\"4\"}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='xm'>项目</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='lw' value='5' defaultChecked={this.state.type ==\"5\"}\n                                                   onChange={AddResearchResultActions.updateType}/>\n                                            <label htmlFor='lw'>论文</label>\n                                        </div>\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>内容</label>\n                                        <Ueditor name={this.state.summary} id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditResearchResult;","import React from 'react';\nimport ResearchTeamStore from '../stores/ResearchTeamStore';\nimport ResearchTeamActions from '../actions/ResearchTeamActions';\nimport AddResearchTeamActions from '../actions/AddResearchTeamActions';\nimport Ueditor from './Ueditor';\nclass EditResearchTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchTeamStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        ResearchTeamActions.getResearchTeam(this.props.params.id);\n\n    }\n    componentDidMount() {\n        ResearchTeamStore.unlisten(this.onChange);\n        ResearchTeamActions.getResearchTeam(this.props.params.id);\n\n    }\n\n    componentWillUnmount() {\n        ResearchTeamStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            ResearchTeamActions.getResearchTeam(this.props.params.id);\n        }\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var reqData={\n            id:this.state.id,\n            name:$(\"#name\").val(),\n            academy:$(\"#academy\").val(),\n            type:$('input:radio[name=\"type\"]:checked').val(),\n            url:$(\"#imgUrl\").attr(\"src\"),\n            summary:UE.getEditor('content').getContent(),\n            aliases:$(\"#aliases\").val(),\n            professional:$(\"#professional\").val()\n        }\n        AddResearchTeamActions.editResearchTeam(reqData);\n    }\n    imgAjaxUpload(event){\n        var self= this;\n        event.preventDefault();\n        var imgEle=$(event.target),formDom=$(event.target.parentNode),fileEle=$(event.target.nextSibling);\n        fileEle.click();\n        fileEle.on('change',function(){\n            var objFile=  $(this).val();\n            var objType = objFile.substring(objFile.lastIndexOf(\".\")).toLowerCase();\n            if(!(objType===\".jpg\" || objType ===\".png\" || objType===\".jpeg\")){\n                alert(\"请选择.jpg/.png/.jpeg类型的图片\");\n                return false;\n            }\n            $.ajax({\n                url: '/fileUpload/add',\n                type: 'POST',\n                cache: false,\n                data: new FormData(formDom[0]),\n                processData: false,\n                contentType: false\n            }).done(function(res) {\n                imgEle.attr('src',res.src);\n            }).fail(function(res) {});\n        });\n    }\n    render() {\n        let style={\n            opacity:0\n        }\n        var url=\"/img/default.gif\";\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>编辑研究团队</div>\n                            <div className='panel-body'>\n                                <span className='help-block'>{this.state.helpBlock}</span>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <form>\n                                        <input type=\"hidden\" name=\"baseUrl\" value=\"public/img/yjzx/research_team/\"/>\n                                        <img onClick={this.imgAjaxUpload.bind(this)} id=\"imgUrl\" height=\"200\" width=\"200\"  src={this.state.url || url}  />\n                                        <input name=\"img\" type=\"file\" style={style} />\n                                    </form>\n                                </div>\n                                <form onSubmit={this.handleSubmit.bind(this)}>\n                                    <input type=\"hidden\" id=\"id\" value={this.state.id}/>\n\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>团队名称</label>\n                                        <input type='text' className='form-control' id=\"name\" ref='nameTextField' defaultValue={this.state.name}\n                                               onChange={ResearchTeamActions.updateName} />\n                                    </div>\n\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>别名</label>\n                                        <input type='text' className='form-control' id='aliases' ref='nameTextField' defaultValue={this.state.aliases}\n                                               onChange={ResearchTeamActions.updateAliases} />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>职称</label>\n                                        <input type='text' className='form-control' id='professional' ref='nameTextField' defaultValue={this.state.professional}\n                                               onChange={ResearchTeamActions.updateProfessional} />\n                                    </div>\n\n                                    <div className={'form-group '}>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='js' value='1' defaultChecked={this.state.type == 1}\n                                                  />\n                                            <label htmlFor='js'>教授</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='zj' value='2' defaultChecked={this.state.type == 2}\n                                                   />\n                                            <label htmlFor='zj'>专家</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='js1' value='3' defaultChecked={this.state.type == 3}\n                                                   />\n                                            <label htmlFor='js1'>技术</label>\n                                        </div>\n\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>简介</label>\n                                        <input type='text' className='form-control' id=\"academy\" ref='nameTextField' defaultValue={this.state.academy}\n                                               onChange={ResearchTeamActions.updateAcademy} />\n                                    </div>\n\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>描述</label>\n                                        <Ueditor name={this.state.summary} id=\"content\" height=\"400\" />\n                                    </div>\n                                    <button type='submit'  className='btn btn-primary subBtn'>提交</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default EditResearchTeam;","import React from 'react';\nclass Error extends React.Component {\n    render() {\n        var style={\n            width:\"100%\",\n            height:\"100%\"\n        }\n        var div={\n            \"position\":\"absolute\",\n            \"width\":\"100%\",\n            \"height\":\"100%\",\n            \"z-index\":-1\n        }\n        return (\n                <div className={div}>\n                    <img height={style.height} width={style.width} src=\"/error.jpg\"/>\n                </div>\n        );\n    }\n}\n\nexport default Error;","import React from 'react';\nimport FeedBackStore from '../stores/FeedBackStore';\nimport FeedBackActions from '../actions/FeedBackActions'\n\nclass FeedBack extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = FeedBackStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        FeedBackActions.getFeedBack(this.props.params.id);\n    }\n    componentDidMount() {\n        FeedBackStore.listen(this.onChange);\n        FeedBackActions.getFeedBack(this.props.params.id);\n    }\n\n    componentWillUnmount() {\n        FeedBackStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            FeedBackActions.getFeedBack(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.message);\n    }\n\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看反馈报告</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>姓名</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>Email</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.email}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default FeedBack;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport FeedBackListStore from '../stores/FeedBackListStore';\nimport FeedBackListActions from '../actions/FeedBackListActions';\n\nclass FeedBackList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = FeedBackListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        FeedBackListStore.listen(this.onChange);\n        FeedBackListActions.getFeedBacks();\n    }\n\n    componentWillUnmount() {\n        FeedBackListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        FeedBackListActions.delFeedBacks(event.target.name);\n    }\n    render() {\n        let FeedBackList = this.state.feedBacks.map((feedBack, index) => {\n            return (\n                <div key={feedBack.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='media-body'>\n                            <h4 className='media-heading'>\n                                <small>姓名 <strong>\n                                    <Link to={'/yjzx/feed-book/getFeedBack/' + feedBack.id}>{feedBack.name}</Link>\n                                </strong></small>\n                            </h4>\n                            <small>Email <strong>{feedBack.email}</strong></small>\n                            <br />\n                            <small>内容 <strong>{feedBack.message}</strong></small>\n                            <br />\n                            <div className=\"del-button\">\n                                <input type=\"button\" value=\"删除\" name={feedBack.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {FeedBackList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FeedBackList;","import React from 'react';\nimport FlowStore from '../stores/FlowStore';\nimport FlowActions from '../actions/FlowActions'\n\nclass Flow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = FlowStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        FlowActions.getFlow(this.props.params.id);\n    }\n    componentDidMount() {\n        FlowStore.listen(this.onChange);\n    }\n\n    componentWillUnmount() {\n        FlowStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.content);\n    }\n    innerHtml(){\n\n    }\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看流程</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.url}/>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>名称</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>作者</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.author}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Flow;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport FlowListStore from '../stores/FlowListStore';\nimport FlowListActions from '../actions/FlowListActions';\nimport Pagination from './Page';\n\nclass FlowList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = FlowListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n//页面渲染完毕 获取数据\n    componentDidMount() {\n        FlowListStore.listen(this.onChange);\n        FlowListActions.getFlows();\n    }\n    pageChangeHandle(){\n        console.info(JSON.stringify(this))\n    }\n    componentWillUnmount() {\n        FlowListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        FlowListActions.delFlow(event.target.name);\n    }\n    render() {\n        let FlowList = this.state.flows.map((flow, index) => {\n            return (\n                <div key={flow.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='media-body'>\n                            <div className='pull-left thumb-lg'>\n                                <img className='media-object'  src={flow.url} />\n                            </div>\n                            <h4 className='media-heading'>\n                                <small>名字 <strong>\n                                    <Link to={'/flow/getFlow/' + flow.id}>{flow.name}</Link>\n                                </strong></small>\n\n                            </h4>\n                            <small>作者 <strong>{flow.author}</strong></small>\n                            <br />\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/flow/editFlow/' + flow.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={flow.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {FlowList}\n                </div>\n                {/*<Pagination key=\"cmk\" start={this.state.start} size={this.state.size} total={this.state.total} pageIndexChange={this.pageChangeHandle} {...this.state} />*/}\n            </div>\n        );\n    }\n}\n\nexport default FlowList;","import React from 'react';\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <footer>\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-sm-12 ' >\n                            <h4 className='lead'>\n                                    数元信安 © 2017.5 Dmisec\n                            </h4>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\nexport default Footer;","import React from 'react';\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n  }\n  componentWillUnmount() {\n  }\n  render() {\n    return (\n      <div className='container'>\n        <h3 className='text-center'>\n\n        </h3>\n        <div className='row'>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <Navbar history={this.props.history} />\n                {this.props.children}\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport {Link} from 'react-router';\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    loginSubmit() {\n        $.ajax(\n            { url: '/login',\n              method:\"POST\",\n              async:false,\n              data:{\n                  name:$(\"#loginName\").val(),\n                  pwd:$(\"#loginPwd\").val()\n              }\n            })\n            .done((data) => {\n            if(data.success){\n                $(\"#goHome\").click();\n            }\n            })\n            .fail((data) => {\n            });\n    }\n    render() {\n        var style={\n            'width':'30%',   \n            'marginLeft':'auto',\n            'marginRight':'auto'\n        }\n        var fromtop={\n            'marginTop':'100px'\n        }\n        return (\n            <div className=\"container\" id=\"login\" style={style}>\n                <header>\n                    <h1 className=\"text-center\">数元信安 </h1>\n                        <h4 className=\"text-center\">后台</h4>\n                </header>\n                <form id=\"login-form\" style={fromtop}>\n                    <div className=\"form-group\" style={{width:\"100%\"}} >\n                        <label>用户名</label>\n                        <input type=\"text\"   className=\"form-control\" placeholder=\"用户名\" id=\"loginName\" required />\n                    </div>\n                    <div className=\"form-group\" style={{width:\"100%\"}}>\n                        <label>密码</label>\n                        <input type=\"password\" className=\"form-control\" placeholder=\"密码\" id=\"loginPwd\" required />\n                    </div>\n                    <button type=\"submit\"  className=\"btn btn-default\" onClick={this.loginSubmit}>登录</button>\n                </form>\n                <Link to={'/home'}>\n                    <div id=\"goHome\"></div>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport MasterTeamStore from '../stores/MasterTeamStore';\nimport MasterTeamActions from '../actions/MasterTeamActions'\n\nclass MasterTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = MasterTeamStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        MasterTeamActions.getMasterTeam(this.props.params.id);\n    }\n    componentDidMount() {\n        MasterTeamStore.listen(this.onChange);\n        MasterTeamActions.getMasterTeam(this.props.params.id);\n    }\n\n    componentWillUnmount() {\n        MasterTeamStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            MasterTeamActions.getMasterTeam(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.content)\n    }\n\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看名师团队</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.url}/>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>名称</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>别名</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.aliases}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>简介</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.introduction}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>职称</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.job}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default MasterTeam;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport MasterTeamListStore from '../stores/MasterTeamListStore';\nimport MasterTeamListActions from '../actions/MasterTeamListActions';\n\nclass MasterTeamList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = MasterTeamListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        MasterTeamListStore.listen(this.onChange);\n        MasterTeamListActions.getMasterTeams();\n    }\n\n    componentWillUnmount() {\n        MasterTeamListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        MasterTeamListActions.delMasterTeam(event.target.name);\n    }\n    render() {\n        let MasterTeamList = this.state.masterTeams.map((masterTeam, index) => {\n            return (\n                <div key={masterTeam.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='pull-left thumb-lg'>\n                            <img className='media-object'  src={masterTeam.url} />\n                        </div>\n                        <div className='media-body'>\n                            <h4 className='media-heading'>\n                                <small>名称 <strong>\n                                    <Link to={'/pxjd/master-team/getMasterTeam/' + masterTeam.id}>{masterTeam.name}</Link>\n                                </strong></small>\n                            </h4>\n                            <small>职称 <strong>{masterTeam.job}</strong></small>\n\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/pxjd/master-team/editMasterTeam/' + masterTeam.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={masterTeam.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {MasterTeamList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MasterTeamList;","import React from 'react';\nimport {Link} from 'react-router';\nimport NavbarStore from '../stores/NavbarStore';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = NavbarStore.getState();\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    NavbarStore.listen(this.onChange);\n    $(document).ajaxStart(() => {\n      NavbarActions.updateAjaxAnimation('fadeIn');\n    });\n\n    $(document).ajaxComplete(() => {\n      setTimeout(() => {\n        NavbarActions.updateAjaxAnimation('fadeOut');\n      }, 750);\n    });\n  }\n\n  componentWillUnmount() {\n    NavbarStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    let searchQuery = this.state.searchQuery.trim();\n\n    if (searchQuery) {\n      NavbarActions.findCharacter({\n        searchQuery: searchQuery,\n        searchForm: this.refs.searchForm,\n        history: this.props.history\n      });\n    }\n  }\n\n  render() {\n    return (\n      <nav className='navbar navbar-default navbar-static-top'>\n        <div className='navbar-header'>\n          <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\n            <span className='sr-only'>Toggle navigation</span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n            <span className='icon-bar'></span>\n          </button>\n          <Link to='/home' className='navbar-brand'>\n            <span className={'triangles animated ' + this.state.ajaxAnimationClass}>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n              <div className='tri'></div>\n              <div className='tri invert'></div>\n            </span>\n            Dmisec\n          </Link>\n        </div>\n        <div id='navbar' className='navbar-collapse collapse'>\n          <ul className='nav navbar-nav'>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>数元信安 <span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>列表</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/syxa/news-consult/list'>新闻资讯</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>添加</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/syxa/news-consult/add'>新闻资讯</Link></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>培训基地 <span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>列表</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/pxjd/master-team/list'>名师团队</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>添加</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/pxjd/master-team/add'>名师团队</Link></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>研究中心 <span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>列表</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/yjzx/research-team/list'>研究团队</Link></li>\n                    <li><Link to='/yjzx/research-project/list'>研究项目</Link></li>\n                    <li className='dropdown-submenu'>\n                      <Link to='#'>研究成果</Link>\n                      <ul className='dropdown-menu'>\n                        <li><Link to='/yjzx/research-result/list/1'>专利</Link></li>\n                        <li><Link to='/yjzx/research-result/list/2'>软著</Link></li>\n                        <li><Link to='/yjzx/research-result/list/3'>获奖</Link></li>\n                        <li><Link to='/yjzx/research-result/list/4'>项目</Link></li>\n                        <li><Link to='/yjzx/research-result/list/5'>论文</Link></li>\n                      </ul>\n                    </li>\n                    <li><Link to='/yjzx/academic-exchange/list'>学术交流</Link></li>\n                    <li><Link to='/yjzx/feed-back/list'>意见反馈</Link></li>\n                  </ul>\n                </li>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>添加</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/yjzx/research-team/add'>研究团队</Link></li>\n                    <li><Link to='/yjzx/research-project/add'>研究项目</Link></li>\n                    <li><Link to='/yjzx/research-result/add'>研究成果</Link></li>\n                    <li><Link to='/yjzx/academic-exchange/add'>学术交流</Link></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>展板 <span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li className='dropdown-submenu'>\n                  <Link to='#'>列表</Link>\n                  <ul className='dropdown-menu'>\n                    <li><Link to='/syxa/spread/list/1'>数元信安</Link></li>\n                    <li><Link to='/syxa/spread/list/2'>培训基地</Link></li>\n                    <li><Link to='/syxa/spread/list/3'>研究中心</Link></li>\n                  </ul>\n                </li>\n                <li>\n                <Link to='/syxa/spread/add/'>添加</Link>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>应用包<span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li >\n                  <Link to='/apk/list'>列表</Link>\n                </li>\n                <li>\n                  <Link to='/apk/add'>添加</Link>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>流程<span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li >\n                  <Link to='/flow/list'>列表</Link>\n                </li>\n                <li>\n                  <Link to='/flow/add'>添加</Link>\n                </li>\n              </ul>\n            </li>\n            <li className='dropdown'>\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>文件<span className='caret'></span></a>\n              <ul className='dropdown-menu'>\n                <li >\n                  <Link to='/document/list'>列表</Link>\n                </li>\n                <li>\n                  <Link to='/document/add'>添加</Link>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport NewsConsultStore from '../stores/NewsConsultStore';\nimport NewsConsultActions from '../actions/NewsConsultActions'\n\nclass NewsConsult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = NewsConsultStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        NewsConsultActions.getNewsConsult(this.props.params.id);\n    }\n    componentDidMount() {\n        NewsConsultStore.listen(this.onChange);\n        NewsConsultActions.getNewsConsult(this.props.params.id);\n        $(\"#showContent\").html(this.state.content)\n    }\n\n    componentWillUnmount() {\n        NewsConsultStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            NewsConsultActions.getNewsConsult(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.content);\n    }\n    innerHtml(){\n\n    }\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看新闻资讯/公司动态</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.top_img}/>\n                                </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>标题</label>\n                                        <input type='text' className='form-control' ref='nameTextField' defaultValue={this.state.title}\n                                              />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>作者</label>\n                                        <input type='text' className='form-control' ref='nameTextField' defaultValue={this.state.author}\n                                               />\n                                    </div>\n                                    <div className={'form-group '}>\n                                        <label className='control-label'>子标题</label>\n                                        <input type='text' className='form-control' ref='nameTextField' defaultValue={this.state.subtitle}\n                                               />\n                                    </div>\n\n                                    <div className={'form-group '}>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='female' defaultValue='1' checked={this.state.type === 1}\n                                                   />\n                                            <label htmlFor='female'>新闻咨询</label>\n                                        </div>\n                                        <div className='radio radio-inline'>\n                                            <input type='radio' name='type' id='male' defaultValue='2' checked={this.state.type === 2}\n                                                   />\n                                            <label htmlFor='male'>公司动态</label>\n                                        </div>\n                                        <div className={'form-group '}>\n                                            <label className='control-label'>内容</label><br/>\n                                            <div id=\"showContent\" >\n                                            </div>\n                                        </div>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default NewsConsult;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport NewsConsultListStore from '../stores/NewsConsultListStore';\nimport NewsConsultListActions from '../actions/NewsConsultListActions';\nimport Pagination from './Page';\n\nclass NewsConsultList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = NewsConsultListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n//页面渲染完毕 获取数据\n    componentDidMount() {\n        NewsConsultListStore.listen(this.onChange);\n        NewsConsultListActions.getNewsConsults();\n    }\n    pageChangeHandle(){\n        console.info(JSON.stringify(this))\n    }\n    componentWillUnmount() {\n        NewsConsultListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        NewsConsultListActions.delNewsConsult(event.target.name);\n    }\n    render() {\n        let NewsConsultList = this.state.newsConsults.map((newsConsult, index) => {\n            return (\n                <div key={newsConsult.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='media-body'>\n                            <div className='pull-left thumb-lg'>\n                                <img className='media-object'  src={newsConsult.top_img} />\n                            </div>\n                            <h4 className='media-heading'>\n                                <small>标题 <strong>\n                                    <Link to={'/syxa/news-consult/getNewsConsult/' + newsConsult.id}>{newsConsult.title}</Link>\n                                </strong></small>\n\n                            </h4>\n                            <small>作者 <strong>{newsConsult.author}</strong></small>\n                            <br />\n                            <small>类型 <strong>{newsConsult.type}</strong></small>\n                            <br />\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/syxa/news-consult/editNewsConsult/' + newsConsult.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={newsConsult.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {NewsConsultList}\n                </div>\n                {/*<Pagination key=\"cmk\" start={this.state.start} size={this.state.size} total={this.state.total} pageIndexChange={this.pageChangeHandle} {...this.state} />*/}\n            </div>\n        );\n    }\n}\n\nexport default NewsConsultList;","import React, {Component, PropTypes } from 'react';\nexport default class Page extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            showLinkNum : 10 //每次显示的页数\n        }\n    }\n    componentDidMount (){\n\n        const pageIndex = (this.props.start/this.props.total) + 1;\n        const pageNum = (this.props.total%this.props.size) == 0 ? this.props.total/this.props.size : parseInt(this.props.total/this.props.size + 1);\n\n        this.setState(Object.assign({},\n            this.props,\n            {pageIndex:pageIndex, pageNum:pageNum}));\n    }\n\n    //控制页码跳转的函数\n    pageIndexChange(event){\n        let target = event.target;\n        if(target.parentNode.className=='disabled') return;\n        let index = \"\";\n        let pageIndex = target.value;\n        let pageInputIndex = target.value;\n        var type = target.getAttribute(\"data-type\");\n        if (type == \"link\") {\n            index = event.target.innerHTML;\n            if (!isNaN(index)) {\n                pageIndex = index;\n            }else if (index == \"首页\") {\n                pageIndex = 1;\n            }else if (index == \"尾页\") {\n                pageIndex = this.state.pageNum;\n            }else if (index == \"»\") {\n                pageIndex = parseInt(this.state.pageIndex) + 1;\n            }else if (index == \"«\") {\n                pageIndex = parseInt(this.state.pageIndex) - 1;\n            }\n            this.state.pageIndexChange((pageIndex-1)*this.state.size);\n        }else if (type == \"btn-go\") {\n            let goIndex = document.getElementById(\"index-input\");\n            pageIndex = goIndex.value;\n            this.state.pageIndexChange((pageIndex-1)*this.state.size);\n        }else if (type == \"input\") {\n            return null;\n        }\n\n        this.setState({pageIndex:pageIndex})\n    }\n    render(){\n        var arrFirst = [];//首页和前一页\n        var arrLast = [];//尾页和后一页\n        var arrLinkShow = []; //每次显示的页码\n        var prevDisplay = 1 == this.state.pageIndex ? 'disabled': ''; //当前页为1时，首页和前一页失效\n        var lastDisplay = this.state.pageNum == this.state.pageIndex ? 'disabled':'';//当前页为最后一页时，尾页和后一页失效\n        var startIndex = (Math.ceil(this.state.pageIndex/this.state.showLinkNum)-1) * this.state.showLinkNum + 1;//每次显示页数的开始页\n        var endIndex = Math.min(startIndex + this.state.showLinkNum,(this.state.pageNum+1));//每次显示页数的结束页\n        for ( var i = startIndex; i　< endIndex; i++ ) {\n            var currentIndexDisplay = i == this.state.pageIndex ? 'active' : '';\n            arrLinkShow.push(\n                <li key = {i} className = {currentIndexDisplay}>\n                    <a href=\"javascript:;\" data-type = \"link\">{i}</a>\n                </li>\n            )\n        }\n        arrFirst.push(\n            <li key=\"first\" className = {prevDisplay}>\n                <a href=\"javascript:;\" data-type = \"link\" >首页</a>\n            </li>\n        );\n        arrFirst.push(\n            <li key = \"1\" className = {prevDisplay}>\n                <a href=\"javascript:;\" aria-label=\"Previous\" data-type = \"link\" id = \"pre\" >\n                    «\n                </a>\n            </li>\n        );\n        arrLast.push(\n            <li key = \"last\" className = {lastDisplay}>\n                <a href=\"javascript:;\" data-type = \"link\">尾页</a>\n            </li>\n        );\n        arrLast.push(\n            <li key ={this.state.pageNum} className = {lastDisplay} >\n                <a href=\"javascript:;\" aria-label=\"Next\" data-type = \"link\" id = \"next\">\n                    »\n                </a>\n            </li>\n        )\n        return (\n            <nav className=\"text-center\" key=\"page\">\n                <ul key='page-ul' className=\"pagination\" onClick = {this.pageIndexChange.bind(this)}>\n                    {arrFirst}\n                    {arrLinkShow}\n                    {arrLast}\n                    {/*<li>*/}\n                        {/*<input type=\"text\" data-type = \"input\" id=\"index-input\" />*/}\n                        {/*<a href=\"javascript:;\" className=\"btn page-go\" data-type = \"btn-go\">跳转</a>*/}\n                    {/*</li>*/}\n                </ul>\n            </nav>\n        )\n    }\n}\n\nPage.propTypes = {\n    pageIndexChange:PropTypes.func.isRequired,\n    size:PropTypes.number.isRequired,\n    total:PropTypes.number.isRequired,\n    start:PropTypes.number.isRequired,\n}","import React from 'react';\nimport ResearchProjectStore from '../stores/ResearchProjectStore';\nimport ResearchProjectActions from '../actions/ResearchProjectActions'\n\nclass ResearchProject extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchProjectStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        ResearchProjectActions.getResearchProject(this.props.params.id);\n    }\n    componentDidMount() {\n        ResearchProjectStore.listen(this.onChange);\n        ResearchProjectActions.getResearchProject(this.props.params.id);\n    }\n\n    componentWillUnmount() {\n        ResearchProjectStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            ResearchProjectActions.getResearchProject(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.summary);\n    }\n\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看研究工程</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>标题</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.url}/>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default ResearchProject;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport ResearchProjectListStore from '../stores/ResearchProjectListStore';\nimport ResearchProjectListActions from '../actions/ResearchProjectListActions';\n\nclass ResearchProjectList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchProjectListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        ResearchProjectListStore.listen(this.onChange);\n        ResearchProjectListActions.getResearchProjects();\n    }\n\n    componentWillUnmount() {\n        ResearchProjectListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        ResearchProjectListActions.delResearchProject(event.target.name);\n    }\n    render() {\n        let ResearchProjectList = this.state.researchProjects.map((researchProject, index) => {\n            return (\n                <div key={researchProject.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='pull-left thumb-lg'>\n                            <img className='media-object'  src={researchProject.url} />\n                        </div>\n                        <div className='media-body'>\n                            <h4 className='media-heading'>\n                                <small>标题 <strong>\n                                    <Link to={'/yjzx/research-project/getResearchProject/' + researchProject.id}>{researchProject.title}</Link>\n                                </strong></small>\n\n                            </h4>\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/syxa/news-project/editNewsProject/' + researchProject.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={researchProject.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {ResearchProjectList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResearchProjectList;","import React from 'react';\nimport ResearchResultStore from '../stores/ResearchResultStore';\nimport ResearchResultActions from '../actions/ResearchResultActions'\n\nclass ResearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchResultStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        ResearchResultActions.getResearchResult(this.props.params.id);\n    }\n    componentDidMount() {\n        ResearchResultStore.listen(this.onChange);\n        ResearchResultActions.getResearchResult(this.props.params.id);\n    }\n\n    componentWillUnmount() {\n        ResearchResultStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            ResearchResultActions.getResearchResult(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.summary);\n    }\n\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看研究成果</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>标题</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.title}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>类型</label>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='zl' value='1' checked={this.state.type ==\"1\"}\n                                               />\n                                        <label htmlFor='zl'>专利</label>\n                                    </div>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='rz' value='2' checked={this.state.type ==\"2\"}\n                                               />\n                                        <label htmlFor='rz'>软著</label>\n                                    </div>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='hj' value='3' checked={this.state.type ==\"3\"}\n                                               />\n                                        <label htmlFor='hj'>获奖</label>\n                                    </div>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='xm' value='4' checked={this.state.type ==\"4\"}\n                                               />\n                                        <label htmlFor='xm'>项目</label>\n                                    </div>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='lw' value='5' checked={this.state.type ==\"5\"}\n                                               />\n                                        <label htmlFor='lw'>论文</label>\n                                    </div>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.url}/>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default ResearchResult;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport ResearchResultListStore from '../stores/ResearchResultListStore';\nimport ResearchResultListActions from '../actions/ResearchResultListActions';\n\nclass ResearchResultList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchResultListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        ResearchResultListStore.listen(this.onChange);\n        ResearchResultListActions.getResearchResults(this.props.params.type);\n    }\n\n    componentWillUnmount() {\n        ResearchResultListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        ResearchResultListActions.delResearchResult(event.target.name,this.props.params.type);\n    }\n    render() {\n        let ResearchResultList = this.state.researchResults.map((researchResult, index) => {\n            return (\n                <div key={researchResult.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='pull-left thumb-lg'>\n                            <img className='media-object'  src={researchResult.url} />\n                        </div>\n                        <div className='media-body'>\n                            <h4 className='media-heading'>\n                                <small>标题 <strong>\n                                    <Link to={'/yjzx/research-result/getResearchResult/' + researchResult.id}>{researchResult.title}</Link>\n                                </strong></small>\n                            </h4>\n                            <small>类型 <strong>{researchResult.type}</strong></small><br/>\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/yjzx/research-result/editresearchResult/' + researchResult.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={researchResult.id}  onClick={this.delClick.bind(this)} />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {ResearchResultList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResearchResultList;","import React from 'react';\nimport ResearchTeamStore from '../stores/ResearchTeamStore';\nimport ResearchTeamActions from '../actions/ResearchTeamActions'\n\nclass ResearchTeam extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchTeamStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        ResearchTeamActions.getResearchTeam(this.props.params.id);\n    }\n    componentDidMount() {\n        ResearchTeamStore.listen(this.onChange);\n        ResearchTeamActions.getResearchTeam(this.props.params.id);\n    }\n\n    componentWillUnmount() {\n        ResearchTeamStore.unlisten(this.onChange);\n        $(document.body).removeClass();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            ResearchTeamActions.getResearchTeam(this.props.params.id);\n        }\n\n    }\n\n    onChange(state) {\n        this.setState(state);\n        $(\"#showContent\").html(this.state.summary);\n    }\n\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        return (\n            <div className='container'>\n                <div className='row flipInX animated'>\n                    <div className='col-sm-12'>\n                        <div className='panel panel-default'>\n                            <div className='panel-heading'>查看研究团队</div>\n                            <div className='panel-body'>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>名称</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.name}\n                                    />\n                                </div>\n\n                                <div className={'form-group '}>\n                                    <label className='control-label'>别名</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.aliases}\n                                          />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>职称</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.professional}\n                                           />\n                                </div>\n\n\n                                <div className={'form-group '}>\n                                    <label className='control-label'>类型</label>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='js' defaultValue='1' checked={this.state.type === \"1\"}\n                                        />\n                                        <label htmlFor='js'>教授</label>\n                                    </div>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='zj' defaultValue='2' checked={this.state.type === \"2\"}\n                                        />\n                                        <label htmlFor='js'>专家</label>\n                                    </div>\n                                    <div className='radio radio-inline'>\n                                        <input type='radio' name='type' id='js1' defaultValue='1' checked={this.state.type === \"3\"}\n                                        />\n                                        <label htmlFor='js1'>技术</label>\n                                    </div>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>图片</label>\n                                    <img width={style.width} height={style.height} src={this.state.url}/>\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>简介</label>\n                                    <input type='text' className='form-control' ref='nameTextField' value={this.state.academy}\n                                    />\n                                </div>\n                                <div className={'form-group '}>\n                                    <label className='control-label'>内容</label><br/>\n                                    <div id=\"showContent\" >\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default ResearchTeam;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport ResearchTeamListStore from '../stores/ResearchTeamListStore';\nimport ResearchTeamListActions from '../actions/ResearchTeamListActions';\n\nclass ResearchTeamList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = ResearchTeamListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        ResearchTeamListStore.listen(this.onChange);\n        ResearchTeamListActions.getResearchTeams();\n    }\n\n    componentWillUnmount() {\n        ResearchTeamListStore.unlisten(this.onChange);\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    onChange(state) {\n        this.setState(state);\n    }\n    delClick(event){\n        ResearchTeamListActions.delResearchTeam(event.target.name);\n    }\n    render() {\n        let ResearchTeamList = this.state.researchTeams.map((researchTeam, index) => {\n            return (\n                <div key={researchTeam.id} className='list-group-item animated fadeIn'>\n                    <div className='media'>\n                        <span className='position pull-left'>{index<=8?'0'+(index + 1):index + 1}</span>\n                        <div className='pull-left thumb-lg'>\n                            <img className='media-object'  src={researchTeam.url} />\n                        </div>\n                        <div className='media-body'>\n                            <h4 className='media-heading'>\n                                <small>名称 <strong>\n                                    <Link to={'/yjzx/research-team/getResearchTeam/' + researchTeam.id}>{researchTeam.name}</Link>\n                                </strong></small>\n\n                            </h4>\n                            <small>类型 <strong>{researchTeam.type}</strong></small>\n                            <br />\n                            <small>简介 <strong>{researchTeam.academy}</strong></small>\n                            <br />\n                            <div className=\"del-button\">\n                                <button>\n                                    <Link to={'/yjzx/research-team/editResearchTeam/' + researchTeam.id}>编辑</Link>\n                                </button>\n                                <input type=\"button\" value=\"删除\" name={researchTeam.id}  onClick={this.delClick} />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n        });\n\n        return (\n            <div className='container'>\n                <div className='list-group'>\n                    {ResearchTeamList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResearchTeamList;","import React from 'react';\nimport {Link} from 'react-router';\nimport {isEqual} from 'underscore';\nimport SpreadListStore from '../stores/SpreadListStore';\nimport SpreadListActions from '../actions/SpreadListActions';\n\nclass SpreadList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = SpreadListStore.getState();\n        this.onChange = this.onChange.bind(this);\n    }\n    componentWillMount(){\n        SpreadListStore.listen(this.onChange);\n    }\n    componentDidMount() {\n        SpreadListActions.getSpreads(this.props.params.type)\n    }\n    componentWillUnmount() {\n        SpreadListStore.unlisten(this.onChange);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.type !== this.props.params.type) {\n            SpreadListActions.getSpreads(this.props.params.id);\n        }\n    }\n    onChange(state) {\n        this.setState(state);\n    }\n    render() {\n        let style={\n            width:\"200px\",\n            height:\"200px\"\n        }\n        let SpreadList = this.state.spreads.map((spread, index) => {\n            return (\n                <div key={spread.id} className=\"col-sm-2\">\n                           <img width={style.width} height={style.height} src={spread.url}/>\n                </div>\n            );\n        });\n        return (\n            <div className='container'>\n                <div className=\"row\">\n                    {SpreadList}\n                </div>\n            </div>\n        );\n    }\n}\nexport default SpreadList;","import React from 'react';\nclass Ueditor extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n    componentDidMount(){\n        this.initEditor()\n    }\n    componentWillUnmount() {\n        // 组件卸载后，清除放入库的id\n        UE.delEditor(this.props.id);\n    }\n    initEditor() {\n        const id = this.props.id;\n        const cont=this.props.name;\n        const ueEditor = UE.getEditor(this.props.id, {autoClearinitialContent:false});\n        ueEditor.ready((ueditor) => {\n            if (!ueditor) {\n                UE.delEditor(id);\n                self.initEditor();\n            }\n            ueEditor.setContent(cont);\n        });\n\n    }\n    render(){\n        return (\n            <div id={this.props.id} name=\"content\" type=\"text/plain\">\n\n            </div>\n        )\n    }\n}\nexport default Ueditor;","import React from 'react';\nimport Router from 'react-router';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\nimport routes from './routes';\nimport Navbar from './components/Navbar';\n\nlet history = createBrowserHistory();\n\nReactDOM.render(<Router history={history}>{routes}</Router>, document.getElementById('app'));","import React from 'react';\nimport {Route,IndexRoute} from 'react-router';\nimport App from './components/App';\nimport Index from './components/Index';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Error from './components/Error';\nimport AddNewsConsult from './components/AddNewsConsult';\nimport NewsConsult from './components/NewsConsult';\nimport NewsConsultList from './components/NewsConsultList';\nimport EditNewsConsult from './components/EditNewsConsult';\nimport AddMasterTeam from './components/AddMasterTeam';\nimport MasterTeamList from './components/MasterTeamList';\nimport MasterTeam from './components/MasterTeam';\nimport EditMasterTeam from './components/EditMasterTeam';\nimport AddResearchTeam from './components/AddResearchTeam';\nimport ResearchTeamList from './components/ResearchTeamList';\nimport EditResearchResult from './components/EditResearchResult';\nimport ResearchTeam from './components/ResearchTeam';\nimport EditResearchTeam from './components/EditResearchTeam';\nimport AddResearchProject from './components/AddResearchProject';\nimport ResearchProjectList from './components/ResearchProjectList';\nimport EditResearchProject from './components/EditResearchProject';\nimport ResearchProject from './components/ResearchProject';\nimport AddResearchResult from './components/AddResearchResult';\nimport ResearchResultList from './components/ResearchResultList';\nimport ResearchResult from './components/ResearchResult';\nimport AddAcademicExchange from './components/AddAcademicExchange';\nimport AcademicExchangeList from './components/AcademicExchangeList';\nimport EditAcademicExchange from './components/EditAcademicExchange';\nimport AcademicExchange from './components/AcademicExchange';\nimport SpreadList from './components/SpreadList';\nimport FeedBackList from './components/FeedBackList';\nimport FeedBack from './components/FeedBack';\nimport AddSpread from './components/AddSpread';\nimport Apk from './components/Apk';\nimport ApkList from './components/ApkList';\nimport AddFlow from './components/AddFlow';\nimport FlowList from './components/FlowList';\nimport Flow from './components/Flow';\nimport EditFlow from './components/EditFlow';\nimport AddDocument from './components/AddDocument';\nexport default (\n  <Route component={App}>\n    <IndexRoute component={Login}/>\n    <Route path=\"/login\" component={Login}/>\n    <Route path=\"/error\" component={Error}/>\n    <Route component={Index}>\n    <Route path='/home' component={Home} />\n    <Route path='/syxa/news-consult/add' component={AddNewsConsult} />\n    <Route path='/syxa/news-consult/list' component={NewsConsultList} />\n    <Route path='/syxa/news-consult/getNewsConsult/:id' component={NewsConsult} />\n    <Route path='/syxa/news-consult/editNewsConsult/:id' component={EditNewsConsult} />\n    <Route path='/pxjd/master-team/add' component={AddMasterTeam} />\n    <Route path='/pxjd/master-team/list' component={MasterTeamList} />\n    <Route path='/pxjd/master-team/editMasterTeam/:id' component={EditMasterTeam} />\n    <Route path='/pxjd/master-team/getMasterTeam/:id' component={MasterTeam} />\n    <Route path='/yjzx/research-team/add' component={AddResearchTeam} />\n    <Route path='/yjzx/research-team/list' component={ResearchTeamList} />\n    <Route path='/yjzx/research-team/editResearchTeam/:id' component={EditResearchTeam} />\n    <Route path='/yjzx/research-team/getResearchTeam/:id' component={ResearchTeam} />\n    <Route path='/yjzx/research-project/add' component={AddResearchProject} />\n    <Route path='/yjzx/research-project/list' component={ResearchProjectList} />\n    <Route path='/yjzx/research-project/getResearchProject/:id' component={ResearchProject} />\n    <Route path='/syxa/news-project/editNewsProject/:id' component={EditResearchProject} />\n    <Route path='/yjzx/research-result/add' component={AddResearchResult} />\n    <Route path='/yjzx/research-result/list/:type' component={ResearchResultList} />\n    <Route path='/yjzx/research-result/getResearchResult/:id' component={ResearchResult} />\n    <Route path='/yjzx/research-result/editresearchResult/:id' component={EditResearchResult} />\n    <Route path='/yjzx/academic-exchange/add' component={AddAcademicExchange} />\n    <Route path='/yjzx/academic-exchange/list' component={AcademicExchangeList} />\n    <Route path='/yjzx/academic-exchange/getAcademicExchange/:id' component={AcademicExchange} />\n    <Route path='/syxa/academic-exchange/editAcademicExchange/:id' component={EditAcademicExchange} />\n    <Route path='/yjzx/feed-back/list' component={FeedBackList} />\n    <Route path='/yjzx/feed-book/getFeedBack/:id' component={FeedBack} />\n    <Route path='/syxa/spread/add' component={AddSpread} />\n    <Route path='/syxa/spread/list/:type' component={SpreadList} />\n    <Route path='/apk/add' component={Apk} />\n    <Route path='/apk/list' component={ApkList} />\n    <Route path='/flow/add' component={AddFlow} />\n    <Route path='/flow/list' component={FlowList} />\n    <Route path='/flow/getFlow/:id' component={Flow} />\n    <Route path='/flow/editFlow/:id' component={EditFlow} />\n    <Route path='/document/add' component={AddDocument} />\n    </Route>\n  </Route>\n);\n","import alt from '../alt';\nimport AcademicExchangeListActions from '../actions/AcademicExchangeListActions';\n\nclass AcademicExchangeListStore {\n    constructor() {\n        this.bindActions(AcademicExchangeListActions);\n        this.academicExchanges = [];\n    }\n\n    onGetAcademicExchangeListSuccess(data) {\n        this.academicExchanges = data;\n    }\n\n    onGetAcademicExchangeListFail(data) {\n        this.academicExchanges = data;\n    }\n}\n\nexport default alt.createStore(AcademicExchangeListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport AcademicExchangeActions from '../actions/AcademicExchangeActions';\n\nclass AcademicExchangeStore {\n    constructor() {\n        this.bindActions(AcademicExchangeActions);\n        this.id = 0;\n        this.title = '';\n        this.address = '';\n        this.author = '';\n        this.content='';\n    }\n\n    onGetAcademicExchangeSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetAcademicExchangeFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(AcademicExchangeStore);","import alt from '../alt';\nimport AddAcademicExchangeActions from '../actions/AddAcademicExchangeActions';\n\nclass AddAcademicExchangeStore {\n    constructor() {\n        this.bindActions(AddAcademicExchangeActions);\n        this.title = '';//标题\n        this.author = '';//地址\n        this.address='';//内容\n        this.helpBlock = '';\n    }\n    //添加成功的事件\n    onAddAcademicExchangeSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n//添加失败的事件\n    onAddAcademicExchangeFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n//修改更新\n    onUpdateTitle(event) {\n        this.title = event.target.value;\n    }\n\n    onUpdateAuthor(event) {\n        this.author = event.target.value;\n    }\n    onUpdateAddress(event) {\n        this.address = event.target.value;\n    }\n}\n\nexport default alt.createStore(AddAcademicExchangeStore);","import alt from '../alt';\nimport AddDocumentActions from '../actions/AddDocumentActions';\n\nclass AddDocumentStore {\n    constructor() {\n        this.bindActions(AddDocumentActions);\n        this.name = '';\n        this.helpBlock = '';\n    }\n    onAddDocumentSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n    onAddDocumentFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n    onUpdateName(event) {\n        this.name = event.target.value;\n    }\n}\nexport default alt.createStore(AddDocumentStore);","import alt from '../alt';\nimport AddFlowActions from '../actions/AddFlowActions';\n\nclass AddFlowStore {\n    constructor() {\n        this.bindActions(AddFlowActions);\n        this.name = '';\n        this.author = '';\n        this.content='';\n        this.url='';\n        this.helpBlock = '';\n    }\n    onAddFlowSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n    onAddFlowFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n    onUpdateName(event) {\n        this.name = event.target.value;\n    }\n    onUpdateAuthor(event) {\n        this.author = event.target.value;\n    }\n    onUpdateJob(event) {\n        this.url = event.target.value;\n    }\n    onUpdateContent(event) {\n        this.content = event.target.value;\n    }\n}\nexport default alt.createStore(AddFlowStore);","import alt from '../alt';\nimport AddMasterTeamActions from '../actions/AddMasterTeamActions';\n\nclass AddMasterTeamStore {\n    constructor() {\n        this.bindActions(AddMasterTeamActions);\n        this.name = '';//标题\n        this.job = '';//地址\n        this.content='';//内容\n        this.aliases='';\n        this.introduction='';\n        this.helpBlock = '';\n    }\n    //添加成功的事件\n    onAddMasterTeamSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n//添加失败的事件\n    onAddMasterTeamFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n//修改更新\n    onUpdateName(event) {\n        this.name = event.target.value;\n    }\n    onUpdateAliases(event) {\n        this.aliases = event.target.value;\n    }\n    onUpdateIntroduction(event) {\n        this.introduction = event.target.value;\n    }\n    onUpdateJob(event) {\n        this.job = event.target.value;\n    }\n    onUpdateContent(event) {\n        this.content = event.target.value;\n    }\n}\n\nexport default alt.createStore(AddMasterTeamStore);","import alt from '../alt';\nimport AddNewsConsultActions from '../actions/AddNewsConsultActions';\n\nclass AddNewsConsultStore {\n    constructor() {\n        this.bindActions(AddNewsConsultActions);\n        this.title = '';//标题\n        this.author='';//作者\n        this.type='1';//新闻公告/公司动态\n        this.subtitle='';//描述\n        this.content='';//内容\n        this.helpBlock = '';\n    }\n    //添加成功的事件\n    onAddNewsConsultSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n//添加失败的事件\n    onAddNewConsultFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n//修改更新\n    onUpdateTitle(event) {\n        this.title = event.target.value;\n    }\n\n\n    onUpdateAuthor(event) {\n        this.author = event.target.value;\n    }\n    onUpdateType(event) {\n        this.type = event.target.value;\n    }\n    onUpdateSubtitle(event) {\n        this.subtitle = event.target.value;\n    }\n    onUpdateContent(event) {\n        this.content = event.target.value;\n    }\n}\n\nexport default alt.createStore(AddNewsConsultStore);","import alt from '../alt';\nimport AddResearchProjectActions from '../actions/AddResearchProjectActions';\n\nclass AddResearchProjectStore {\n    constructor() {\n        this.bindActions(AddResearchProjectActions);\n        this.title = '';\n        this.helpBlock = '';\n    }\n    //添加成功的事件\n    onAddResearchProjectSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n//添加失败的事件\n    onAddResearchProjectFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n//修改更新\n    onUpdateTitle(event) {\n        this.title = event.target.value;\n    }\n\n\n}\n\nexport default alt.createStore(AddResearchProjectStore);","import alt from '../alt';\nimport AddResearchResultActions from '../actions/AddResearchResultActions';\n\nclass AddResearchResultStore {\n    constructor() {\n        this.bindActions(AddResearchResultActions);\n        this.title = '';\n        this.type = '1';\n        this.helpBlock = '';\n    }\n    //添加成功的事件\n    onAddResearchResultSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n//添加失败的事件\n    onAddResearchResultFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n//修改更新\n    onUpdateTitle(event) {\n        this.title = event.target.value;\n    }\n\n    onUpdateType(event) {\n        this.type = event.target.value;\n    }\n}\n\nexport default alt.createStore(AddResearchResultStore);","import alt from '../alt';\nimport AddResearchTeamActions from '../actions/AddResearchTeamActions';\n\nclass AddResearchTeamStore {\n    constructor() {\n        this.bindActions(AddResearchTeamActions);\n        this.name = '';\n        this.type = '3';\n        this.academy='';\n        this.helpBlock = '';\n    }\n    //添加成功的事件\n    onAddResearchTeamSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n//添加失败的事件\n    onAddResearchTeamFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n//修改更新\n    onUpdateName(event) {\n        this.name = event.target.value;\n    }\n\n    onUpdateType(event) {\n        this.type = event.target.value;\n    }\n    onUpdateAcademy(event) {\n        this.academy = event.target.value;\n    }\n}\n\nexport default alt.createStore(AddResearchTeamStore);","import alt from '../alt';\nimport AddSpreadActions from '../actions/AddSpreadActions';\nclass AddSpreadStore {\n    constructor() {\n        this.bindActions(AddSpreadActions);\n        this.baseUrl = '';\n        this.helpBlock = '';\n    }\n}\n\nexport default alt.createStore(AddSpreadStore);","import alt from '../alt';\nimport ApkListActions from '../actions/ApkListActions';\n\nclass ApkListStore {\n    constructor() {\n        this.bindActions(ApkListActions);\n        this.apks = [];\n    }\n\n    onGetApkListSuccess(data) {\n        this.apks=data;\n\n    }\n\n    onGetApkListFail(data) {\n        this.apks = data;\n    }\n}\n\nexport default alt.createStore(ApkListStore);","import alt from '../alt';\nimport ApkActions from '../actions/ApkActions';\nclass ApkStore {\n    constructor() {\n        this.bindActions(ApkActions);\n        this.name='';\n        this.version='';\n        this.helpBlock = '';\n    }\n    onAddApkActionsSuccess(successMessage) {\n        this.helpBlock = successMessage;\n    }\n    onAddApkActionsFail(errorMessage) {\n        this.helpBlock = errorMessage;\n    }\n}\n\nexport default alt.createStore(ApkStore);","import alt from '../alt';\nimport FeedBackListActions from '../actions/FeedBackListActions';\n\nclass FeedBackListStore {\n    constructor() {\n        this.bindActions(FeedBackListActions);\n        this.feedBacks = [];\n    }\n\n    onGetFeedBackListSuccess(data) {\n        this.feedBacks = data;\n    }\n\n    onGetFeedBackListFail(data) {\n        this.feedBacks = data;\n    }\n}\n\nexport default alt.createStore(FeedBackListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport FeedBackActions from '../actions/FeedBackActions';\n\nclass FeedBackStore {\n    constructor() {\n        this.bindActions(FeedBackActions);\n        this.id = 0;\n        this.name = '';\n        this.email = '';\n        this.message = '';\n    }\n\n    onGetFeedBackSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetFeedBackFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(FeedBackStore);","import alt from '../alt';\nimport FlowListActions from '../actions/FlowListActions';\n\nclass FlowListStore {\n    constructor() {\n        this.bindActions(FlowListActions);\n        this.flows = [];\n    }\n\n    onGetFlowListSuccess(data) {\n        this.flows = data;\n    }\n\n    onGetFlowListFail(data) {\n        this.flows = data;\n    }\n}\n\nexport default alt.createStore(FlowListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport FlowActions from '../actions/FlowActions';\n\nclass FlowStore {\n    constructor() {\n        this.bindActions(FlowActions);\n        this.id = 0;\n        this.name = '';\n        this.author = '';\n        this.url='';\n        this.content = '';\n    }\n\n    onGetFlowSuccess(data) {\n        this.setState(data)\n    }\n\n    onGetFlowFail(jqXhr) {\n\n    }\n}\n\nexport default alt.createStore(FlowStore);","import alt from '../alt';\nimport MasterTeamListActions from '../actions/MasterTeamListActions';\n\nclass MasterTeamListStore {\n    constructor() {\n        this.bindActions(MasterTeamListActions);\n        this.masterTeams = [];\n    }\n\n    onGetMasterTeamListSuccess(data) {\n        this.masterTeams = data;\n    }\n\n    onGetMasterTeamListFail(data) {\n        this.masterTeams = data;\n    }\n}\n\nexport default alt.createStore(MasterTeamListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport MasterTeamActions from '../actions/MasterTeamActions';\n\nclass MasterTeamStore {\n    constructor() {\n        this.bindActions(MasterTeamActions);\n        this.id = 0;\n        this.name = '';\n        this.job = '';\n        this.aliases='';\n        this.introduction='';\n        this.url = '/img/default.gif';\n        this.content = '';\n    }\n\n    onGetMasterTeamSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetMasterTeamFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(MasterTeamStore);","import alt from '../alt';\nimport NavbarActions from '../actions/NavbarActions';\n\nclass NavbarStore {\n  constructor() {\n    this.bindActions(NavbarActions);\n    this.totalCharacters = 0;\n    this.onlineUsers = 0;\n    this.searchQuery = '';\n    this.ajaxAnimationClass = '';\n  }\n\n\n\n\n  onUpdateOnlineUsers(data) {\n    this.onlineUsers = data.onlineUsers;\n  }\n\n  onUpdateAjaxAnimation(className) {\n    this.ajaxAnimationClass = className; //fadein or fadeout\n  }\n\n  onUpdateSearchQuery(event) {\n    this.searchQuery = event.target.value;\n  }\n\n\n\n}\n\nexport default alt.createStore(NavbarStore);","import alt from '../alt';\nimport NewsConsultListActions from '../actions/NewsConsultListActions';\n\nclass NewsConsultListStore {\n    constructor() {\n        this.bindActions(NewsConsultListActions);\n        this.newsConsults = [];\n    }\n\n    onGetNewsConssultSuccess(data) {\n        this.setState({newsConsults:data.data});\n\n    }\n\n    onGetNewsConssultFail(data) {\n        this.newsConsults = data;\n    }\n}\n\nexport default alt.createStore(NewsConsultListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport NewsConsultActions from '../actions/NewsConsultActions';\n\nclass NewsConsultStore {\n    constructor() {\n        this.bindActions(NewsConsultActions);\n        this.id = 0;\n        this.title = '';\n        this.author = '';\n        this.top_img='';\n        this.type = '';\n        this.subtitle = '';\n        this.content = '';\n    }\n\n    onGetNewsConsultSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetNewConsultFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(NewsConsultStore);","import alt from '../alt';\nimport ResearchProjectListActions from '../actions/ResearchProjectListActions';\n\nclass ResearchProjectListStore {\n    constructor() {\n        this.bindActions(ResearchProjectListActions);\n        this.researchProjects = [];\n    }\n\n    onGetResearchProjectListSuccess(data) {\n        this.researchProjects = data;\n    }\n\n    onGetResearchProjectListFail(data) {\n        this.researchProjects = data;\n    }\n}\n\nexport default alt.createStore(ResearchProjectListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport ResearchProjectActions from '../actions/ResearchProjectActions';\n\nclass ResearchProjectStore {\n    constructor() {\n        this.bindActions(ResearchProjectActions);\n        this.id = 0;\n        this.title = '';\n        this.url = '/img/default.gif';\n        this.summary = '';\n    }\n\n    onGetResearchProjectSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetResearchProjectFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(ResearchProjectStore);","import alt from '../alt';\nimport ResearchResultListActions from '../actions/ResearchResultListActions';\n\nclass ResearchResultListStore {\n    constructor() {\n        this.bindActions(ResearchResultListActions);\n        this.researchResults = [];\n    }\n\n    onGetResearchResultListSuccess(data) {\n        this.researchResults = data;\n    }\n\n    onGetResearchResultListFail(data) {\n        this.researchResults = data;\n    }\n}\n\nexport default alt.createStore(ResearchResultListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport ResearchResultActions from '../actions/ResearchResultActions';\n\nclass ResearchResultStore {\n    constructor() {\n        this.bindActions(ResearchResultActions);\n        this.id = 0;\n        this.title = '';\n        this.type = '';\n        this.url = '/img/default.gif';\n        this.summary = '';\n    }\n\n    onGetResearchResultSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetResearchResultFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(ResearchResultStore);","import alt from '../alt';\nimport ResearchTeamListActions from '../actions/ResearchTeamListActions';\n\nclass ResearchTeamListStore {\n    constructor() {\n        this.bindActions(ResearchTeamListActions);\n        this.researchTeams = [];\n    }\n\n    onGetResearchTeamListSuccess(data) {\n        this.researchTeams = data;\n    }\n\n    onGetResearchTeamListFail(data) {\n        this.researchTeams = data;\n    }\n}\n\nexport default alt.createStore(ResearchTeamListStore);","import {assign, contains} from 'underscore';\nimport alt from '../alt';\nimport ResearchTeamActions from '../actions/ResearchTeamActions';\n\nclass ResearchTeamStore {\n    constructor() {\n        this.bindActions(ResearchTeamActions);\n        this.id = 0;\n        this.name = '';\n        this.type = '';\n        this.url = '/img/default.gif';\n        this.academy = '';\n        this.summary = '';\n    }\n\n    onGetResearchTeamSuccess(data) {\n        this.setState(data[0])\n    }\n\n    onGetResearchTeamFail(jqXhr) {\n    }\n}\n\nexport default alt.createStore(ResearchTeamStore);","import alt from '../alt';\nimport SpreadListActions from '../actions/SpreadListActions';\n\nclass SpreadListStore {\n    constructor() {\n        this.bindActions(SpreadListActions);\n        this.spreads = [];\n    }\n\n    onGetSpreadsSuccess(data) {\n        this.spreads = data;\n    }\n\n    onGetSpreadsFail(data) {\n        this.spreads = data;\n    }\n}\n\nexport default alt.createStore(SpreadListStore);","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}